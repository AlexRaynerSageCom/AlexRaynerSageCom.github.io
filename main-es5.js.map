{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/axis-form/axis-form.component.ts","webpack:///src/app/components/grid-form/grid-form.component.ts","webpack:///src/app/components/grid-view/grid-view.component.ts","webpack:///src/app/components/index.ts","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/models/grid.model.ts","webpack:///src/app/models/index.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/services/index.ts","webpack:///src/app/store/app.action.ts","webpack:///src/app/store/app.reducer.ts","webpack:///src/app/store/app.selector.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","template","styleUrls","AppModule","instrument","maxAge","declarations","providers","bootstrap","AxisFormComponent","axisAdded","axisUnits","axisForm","markAllAsTouched","valid","emit","form","field","get","touched","errors","GridFormComponent","GridViewComponent","store","unsubscribe$","select","pipe","subscribe","grid","index","dispatch","next","complete","Array","columns","length","rows","Math","max","gridTemplateColumns","map","column","size","unit","join","gridColumnGap","columnGap","gridTemplateRows","row","gridRowGap","rowGap","display","columnStyles","rowStyles","SidebarComponent","formsService","gridForm","createGridForm","valueChanges","updatedGrid","columnForm","createAxisForm","rowForm","value","reset","styles","document","getElementById","style","cssText","generatedStyles","replace","addColumn","addRow","getStyles","getInitialGrid","fillGrid","FormsService","formBuilder","group","axis","required","UPDATE_GRID","UpdateGrid","type","ADD_COLUMN","AddColumn","ADD_ROW","AddRow","DELETE_COLUMN","DeleteColumn","position","DELETE_ROW","DeleteRow","defaultBuilderState","builderReducer","state","action","filter","appReducers","app","selectBuilder","selectGrid","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaQ,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,4C;AAAA;AAAA;AAdrB;;AACE;;AACE;;AACF;;AAEA;;AAEF;;AAEA;;;;;;;;;sEAKSA,Y,EAAY;cAjBxB,uDAiBwB;eAjBd;AACTC,kBAAQ,EAAE,UADD;AAETC,kBAAQ,mNAFC;AAeTC,mBAAS,EAAE,CAAC,sBAAD;AAfF,S;AAiBc,Q;;;;;;;;;;;;;;;;;;ACnBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,mF,CAAA;AAMA;AAGA;AAKA;AAGA;AASA;;;QAoCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBALT,CACT,sDADS,C;AAEV,gBAxBQ,CACP,uEADO,EAEP,4DAFO,EAGP,oEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,wDAAYN,OAAZ,CAAoB,8DAApB,CANO,EAOP,yEAAoBO,UAApB,CAA+B;AAACC,cAAM,EAAE;AAAT,OAA/B,CAPO,EAQP,oEARO,EASP,wEATO,EAUP,2EAVO,EAWP,wEAXO,EAYP,gEAZO,EAaP,gEAbO,CAwBR;;;;0HAGUF,S,EAAS;AAAA,uBAXlB,2DAWkB,EAVlB,8DAUkB,EATlB,8DASkB,EARlB,8DAQkB,EAPlB,6DAOkB;AAPF,kBAnBhB,uEAmBgB,EAlBhB,4DAkBgB,EAjBhB,oEAiBgB,EAhBhB,0DAgBgB,EAfhB,kEAegB,EAfG,2DAeH,EAfG,wEAeH,EAZhB,oEAYgB,EAXhB,wEAWgB,EAVhB,2EAUgB,EAThB,wEASgB,EARhB,gEAQgB,EAPhB,gEAOgB;AAOE,O;AAdF,K;;;;;sEAcPA,S,EAAS;cA5BrB,sDA4BqB;eA5BZ;AACRL,iBAAO,EAAE,CACP,uEADO,EAEP,4DAFO,EAGP,oEAHO,EAIP,0DAJO,EAKP,kEALO,EAMP,wDAAYD,OAAZ,CAAoB,8DAApB,CANO,EAOP,yEAAoBO,UAApB,CAA+B;AAACC,kBAAM,EAAE;AAAT,WAA/B,CAPO,EAQP,oEARO,EASP,wEATO,EAUP,2EAVO,EAWP,wEAXO,EAYP,gEAZO,EAaP,gEAbO,CADD;AAgBRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,8DAFY,EAGZ,8DAHY,EAIZ,8DAJY,EAKZ,6DALY,CAhBN;AAuBRC,mBAAS,EAAE,CACT,sDADS,CAvBH;AA0BRC,mBAAS,EAAE,CAAC,2DAAD;AA1BH,S;AA4BY,Q;;;;;;;;;;;;;;;;;;AC9DtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,qF,CAAA;;;;;AA6BU;;AAIE;;AACF;;;;;;AAHE;;AAEA;;AAAA;;;;;;;;AA1BR;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACE;;AAOF;;AAEA;;AACE;;AAME;;AAMF;;AACF;;AAEA;;AAA0B;;AAAG;;AAC/B;;;;;;AA9BE;;AAQI;;AAAA;;AAUA;;AAAA;;AAGE;;AAAA;;;;QAaCC,iB;AAvCb;AAAA;;AA4CE,aAAAC,SAAA,GAAgC,IAAI,0DAAJ,EAAhC;AAEA,aAAAC,SAAA,GAAY,CACV,IADU,EAEV,GAFU,EAGV,IAHU,EAIV,MAJU,CAAZ;AAsBD;;;;kCAfW;AACR,eAAKC,QAAL,CAAcC,gBAAd;;AAEA,cAAI,CAAC,KAAKD,QAAL,CAAcE,KAAnB,EAA0B;AACxB;AACD;;AAED,eAAKJ,SAAL,CAAeK,IAAf;AACD;;;uCAEcC,I,EAAiBC,K,EAAa;AAC3C,iBAAOD,IAAI,CAACE,GAAL,CAASD,KAAT,EAAgBE,OAAhB,IAA2BH,IAAI,CAACE,GAAL,CAASD,KAAT,EAAgBG,MAA3C,GACH,yBADG,GAEH,IAFJ;AAGD;;;;;;;uBA5BUX,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,sW;AAAA;AAAA;AApC1B;;;;AACE;;;;;;;;;sEAmCOA,iB,EAAiB;cAvC7B,uDAuC6B;eAvCnB;AACTT,kBAAQ,EAAE,eADD;AAETC,kBAAQ,84BAFC;AAqCTC,mBAAS,EAAE,CAAC,4BAAD;AArCF,S;AAuCmB,Q;;gBAC3B;;;gBAGA;;;;;;;;;;;;;;;;;;;;AC/CH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uF,CAAA;;;;;AAOI;;AAIE;;AACE;;AACE;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAIE;;AACF;;AACF;;AACF;;;;;;AAxBE;;;;QA4BOmB,iB;;;;;uBAAAA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,gQ;AAAA;AAAA;AA9B1B;;;;AACE;;;;;;;;;sEA6BOA,iB,EAAiB;cAjC7B,uDAiC6B;eAjCnB;AACTrB,kBAAQ,EAAE,eADD;AAETC,kBAAQ,2pBAFC;AA+BTC,mBAAS,EAAE,CAAC,4BAAD;AA/BF,S;AAiCmB,Q;;gBAC3B;;;;;;;;;;;;;;;;;;;;ACtCH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;AASA;;;;;;;AAgBQ;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AAXF;;AAKE;;AAOF;;;;;;AATE;;AAGE;;AAAA;;;;;;;;AAaF;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;;;;;AAXF;;AAKE;;AAOF;;;;;;AATE;;AAGE;;AAAA;;;;;;AAcA;;AAIE;;AACF;;;;;;AANF;;AACE;;AAMF;;;;;;AALI;;AAAA;;;;QAWCoB,iB;AAKX,iCAAoBC,KAApB,EAA4C;AAAA;;AAAxB,aAAAA,KAAA,GAAAA,KAAA;AAFpB,aAAAC,YAAA,GAA8B,IAAI,4CAAJ,EAA9B;AAE8C;;;;mCAEnC;AAAA;;AACT,eAAKD,KAAL,CAAWE,MAAX,CAAkB,8DAAlB,EACGC,IADH,CACQ,iEAAU,KAAKF,YAAf,CADR,EAEGG,SAFH,CAEa,UAAAC,IAAI,EAAI;AACjB,iBAAI,CAACA,IAAL,GAAYA,IAAZ;AACD,WAJH;AAKD;;;qCAEYC,K,EAAe;AAC1B,eAAKN,KAAL,CAAWO,QAAX,CAAoB,IAAI,qEAAJ,CAAiBD,KAAjB,CAApB;AACD;;;kCAESA,K,EAAe;AACvB,eAAKN,KAAL,CAAWO,QAAX,CAAoB,IAAI,kEAAJ,CAAcD,KAAd,CAApB;AACD;;;sCAoCa;AACZ,eAAKL,YAAL,CAAkBO,IAAlB;AACA,eAAKP,YAAL,CAAkBQ,QAAlB;AACD;;;4BArCiB;AAChB,iBAAO,IAAIC,KAAJ,CAAU,KAAKL,IAAL,CAAUM,OAAV,CAAkBC,MAA5B,CAAP;AACD;;;4BAEc;AACb,iBAAO,IAAIF,KAAJ,CAAU,KAAKL,IAAL,CAAUQ,IAAV,CAAeD,MAAzB,CAAP;AACD;;;4BAEW;AACV,iBAAO,IAAIF,KAAJ,CAAU,KAAKL,IAAL,CAAUM,OAAV,CAAkBC,MAAlB,GAA2BE,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKV,IAAL,CAAUQ,IAAV,CAAeD,MAA3B,CAArC,CAAP;AACD;;;4BAEkB;AACjB,iBAAO;AACLI,+BAAmB,EAAE,KAAKX,IAAL,CAAUM,OAAV,CAAkBM,GAAlB,CAAsB,UAAAC,MAAM;AAAA,+BAAOA,MAAM,CAACC,IAAd,SAAqBD,MAAM,CAACE,IAA5B;AAAA,aAA5B,EAAgEC,IAAhE,CAAqE,GAArE,CADhB;AAELC,yBAAa,EAAE,KAAKjB,IAAL,CAAUkB,SAAV,GAAsB;AAFhC,WAAP;AAID;;;4BAEe;AACd,iBAAO;AACLC,4BAAgB,EAAE,KAAKnB,IAAL,CAAUQ,IAAV,CAAeI,GAAf,CAAmB,UAAAQ,GAAG;AAAA,+BAAOA,GAAG,CAACN,IAAX,SAAkBM,GAAG,CAACL,IAAtB;AAAA,aAAtB,EAAoDC,IAApD,CAAyD,GAAzD,CADb;AAELK,sBAAU,EAAE,KAAKrB,IAAL,CAAUsB,MAAV,GAAmB;AAF1B,WAAP;AAID;;;4BAEY;AACX,iBAAO,MAAP,OAAO,CAAP;AACEC,mBAAO,EAAE;AADX,aAEK,KAAKC,YAFV,CAAO,EAGF,KAAKC,SAHH,CAAP;AAKD;;;;;;;uBAvDU/B,iB,EAAiB,kH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA,oV;AAAA;AAAA;AA/C1B;;AACE;;AAcA;;AAcA;;AAKE;;AAQF;;AACF;;;;AAzCI;;AAAA;;AAcA;;AAAA;;AAgBA;;AAAA;;AAEc;;AAAA;;;;;;;;;sEAaTA,iB,EAAiB;cAlD7B,uDAkD6B;eAlDnB;AACTtB,kBAAQ,EAAE,eADD;AAETC,kBAAQ,i/BAFC;AAgDTC,mBAAS,EAAE,CAAC,4BAAD;AAhDF,S;AAkDmB,Q;;;;;;;;;;;;;;;;;;;;;;AClE9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;AAaA;;;;;AA2DM;;AAIN;;AAGA;;;;;;AAHA;;AAAA;;;;QASaoD,gB;AAOX,gCACU/B,KADV,EAEUgC,YAFV,EAEsC;AAAA;;AAD5B,aAAAhC,KAAA,GAAAA,KAAA;AACA,aAAAgC,YAAA,GAAAA,YAAA;AAA8B;;;;mCAE7B;AAAA;;AACT,eAAKhC,KAAL,CAAWE,MAAX,CAAkB,8DAAlB,EACGC,IADH,CACQ,4DAAK,CAAL,CADR,EAEGC,SAFH,CAEa,UAAAC,IAAI,EAAI;AACjB,kBAAI,CAAC4B,QAAL,GAAgB,MAAI,CAACD,YAAL,CAAkBE,cAAlB,CAAiC7B,IAAjC,CAAhB;;AAEA,kBAAI,CAAC4B,QAAL,CAAcE,YAAd,CAA2B/B,SAA3B,CAAqC,UAAAgC,WAAW,EAAI;AAClD,oBAAI,CAACpC,KAAL,CAAWO,QAAX,CAAoB,IAAI,mEAAJ,CAAe6B,WAAf,CAApB;AACD,aAFD;AAGD,WARH;AAUA,eAAKC,UAAL,GAAkB,KAAKL,YAAL,CAAkBM,cAAlB,EAAlB;AACA,eAAKC,OAAL,GAAe,KAAKP,YAAL,CAAkBM,cAAlB,EAAf;AACD;;;oCAEW;AACV,eAAKtC,KAAL,CAAWO,QAAX,CACE,IAAI,kEAAJ,CAAc,KAAK8B,UAAL,CAAgBG,KAA9B,CADF;AAGA,eAAKH,UAAL,CAAgBI,KAAhB;AACD;;;iCAEQ;AACP,eAAKzC,KAAL,CAAWO,QAAX,CACE,IAAI,+DAAJ,CAAW,KAAKgC,OAAL,CAAaC,KAAxB,CADF;AAGA,eAAKD,OAAL,CAAaE,KAAb;AACD;;;oCAEW;AACV,cAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,KAAhC,CAAsCC,OAArD;AAEA,eAAKC,eAAL,GAAuBL,MAAM,CAACM,OAAP,CAAe,KAAf,EAAsB,SAAtB,CAAvB;AACD;;;;;;;uBA5CUjB,gB,EAAgB,kH,EAAA,8H;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,iM;AAAA;AAAA;AAlEzB;;AAYE;;AAAqB;;AAAa;;AAElC;;AAGA;;AAEA;;AACE;;AACE;;AAAgB;AAAA,mBAAe,IAAAM,UAAA,QAAf;AAAiC,WAAjC;;AACd;;AACF;;AACA;;AACE;;AAEE;AAAA,mBAAa,IAAAY,SAAA,EAAb;AAAwB,WAAxB;;AAEF;;AACF;;AACF;;AAEA;;AACE;;AAAgB;AAAA,mBAAe,IAAAV,OAAA,QAAf;AAA8B,WAA9B;;AACd;;AACF;;AACA;;AACE;;AAEE;AAAA,mBAAa,IAAAW,MAAA,EAAb;AAAqB,WAArB;;AAEF;;AACF;;AACF;;AACF;;AAEA;;AAEA;;AAAY;AAAA,mBAAc,IAAAC,SAAA,EAAd;AAAyB,WAAzB;;AACV;;AACF;;AAEA;;AASF;;;;AAhDiB;;AAAA;;AAYP;;AAAA;;AAaA;;AAAA;;AAeN;;AAAA;;;;;;;;;sEAYKpB,gB,EAAgB;cArE5B,uDAqE4B;eArElB;AACTtD,kBAAQ,EAAE,aADD;AAETC,kBAAQ,88CAFC;AAmETC,mBAAS,EAAE,CAAC,0BAAD;AAnEF,S;AAqEkB,Q;;;;;;;;;;;;;;;;;;;;;;;;AC3E7B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMyE,cAAc,GAAG,SAAjBA,cAAiB,GAAiB;AAC7C,aAAO;AACLzC,eAAO,EAAE,CAAC;AAAEQ,cAAI,EAAE,GAAR;AAAaC,cAAI,EAAE;AAAnB,SAAD,EAA4B;AAAED,cAAI,EAAE,GAAR;AAAaC,cAAI,EAAE;AAAnB,SAA5B,CADJ;AAELP,YAAI,EAAE,CAAC;AAAEM,cAAI,EAAE,GAAR;AAAaC,cAAI,EAAE;AAAnB,SAAD,EAA4B;AAAED,cAAI,EAAE,GAAR;AAAaC,cAAI,EAAE;AAAnB,SAA5B,CAFD;AAGLG,iBAAS,EAAE,EAHN;AAILI,cAAM,EAAE,EAJH;AAKL0B,gBAAQ,EAAE;AALL,OAAP;AAOD,KARM;;;;;;;;;;;;;;;;;ACTP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,Y;AAEX,4BAAoBC,WAApB,EAA8C;AAAA;;AAA1B,aAAAA,WAAA,GAAAA,WAAA;AAA4B;;;;uCAEjClD,I,EAAe;AAC5B,iBAAO,KAAKkD,WAAL,CAAiBC,KAAjB,CAAuB;AAC5BjC,qBAAS,EAAElB,IAAI,CAACkB,SADY;AAE5BI,kBAAM,EAAEtB,IAAI,CAACsB,MAFe;AAG5B0B,oBAAQ,EAAEhD,IAAI,CAACgD;AAHa,WAAvB,CAAP;AAWD;;;uCAEcI,I,EAAgB;;;AAC7B,iBAAO,KAAKF,WAAL,CAAiBC,KAAjB,CAAuB;AAC5BrC,gBAAI,EAAE,CAAC,CAAD,KAAEsC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEtC,IAAP,MAAW,IAAX,IAAW,aAAX,GAAW,EAAX,GAAe,EAAhB,EAAoB,0DAAWuC,QAA/B,CADsB;AAE5BtC,gBAAI,EAAE,CAAC,CAAD,KAAEqC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAErC,IAAP,MAAW,IAAX,IAAW,aAAX,GAAW,EAAX,GAAe,IAAhB,EAAsB,0DAAWsC,QAAjC;AAFsB,WAAvB,CAAP;AAID;;;;;;;uBAvBUJ,Y,EAAY,kH;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY;;;;;sEAAZA,Y,EAAY;cADxB;AACwB,Q;;;;;;;;;;;;;;;;;;;;;;ACLzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACMA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMK,WAAW,GAAG,uBAApB;;QAEMC,U,GAGX,oBAAmBvD,IAAnB,EAAoC;AAAA;;AAAjB,WAAAA,IAAA,GAAAA,IAAA;AAFV,WAAAwD,IAAA,GAAOF,WAAP;AAE6B,K,EAGxC;AACA;AACA;;;AAEO,QAAMG,UAAU,GAAG,sBAAnB;;QAEMC,S,GAGX,mBAAmB7C,MAAnB,EAAsC;AAAA;;AAAnB,WAAAA,MAAA,GAAAA,MAAA;AAFV,WAAA2C,IAAA,GAAOC,UAAP;AAE+B,K,EAG1C;AACA;AACA;;;AAEO,QAAME,OAAO,GAAG,mBAAhB;;QAEMC,M,GAGX,gBAAmBxC,GAAnB,EAAmC;AAAA;;AAAhB,WAAAA,GAAA,GAAAA,GAAA;AAFV,WAAAoC,IAAA,GAAOG,OAAP;AAE4B,K,EAGvC;AACA;AACA;;;AAEO,QAAME,aAAa,GAAG,yBAAtB;;QAEMC,Y,GAGX,sBAAmBC,QAAnB,EAAqC;AAAA;;AAAlB,WAAAA,QAAA,GAAAA,QAAA;AAFV,WAAAP,IAAA,GAAOK,aAAP;AAE8B,K,EAGzC;AACA;AACA;;;AAEO,QAAMG,UAAU,GAAG,sBAAnB;;QAEMC,S,GAGX,mBAAmBF,QAAnB,EAAqC;AAAA;;AAAlB,WAAAA,QAAA,GAAAA,QAAA;AAFV,WAAAP,IAAA,GAAOQ,UAAP;AAE8B,K;;;;;;;;;;;;;;;;;AC7DzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAME,mBAAmB,GAAiB;AACxClE,UAAI,EAAE;AADkC,KAA1C;;AAIO,aAASmE,cAAT,GAA6F;AAAA,UAArEC,KAAqE,uEAA/CF,mBAA+C;AAAA,UAA1BG,MAA0B;;AAElG,cAAQA,MAAM,CAACb,IAAf;AACE;AACA;AACA;AAEA,aAAK,uDAAL;AAAiC;AAC/B,mBAAO,MAAP,OAAO,CAAP,kBACKY,KADL,CAAO,EACG;AACRpE,kBAAI,EAAE,MAAF,OAAE,CAAF,kBACCoE,KAAK,CAACpE,IADP,CAAE,EAEDqE,MAAM,CAACrE,IAFN;AADE,aADH,CAAP;AAOD;AAED;AACA;AACA;;AAEA,aAAK,sDAAL;AAAgC;AAC9B,mBAAO,MAAP,OAAO,CAAP,kBACKoE,KADL,CAAO,EACG;AACRpE,kBAAI,EAAE,MAAF,OAAE,CAAF,kBACCoE,KAAK,CAACpE,IADP,CAAE,EACS;AACbM,uBAAO,+BACF8D,KAAK,CAACpE,IAAN,CAAWM,OADT,IAEL+D,MAAM,CAACxD,MAFF;AADM,eADT;AADE,aADH,CAAP;AAUD;AAED;AACA;AACA;;AAEA,aAAK,mDAAL;AAA6B;AAC3B,mBAAO,MAAP,OAAO,CAAP,kBACKuD,KADL,CAAO,EACG;AACRpE,kBAAI,EAAE,MAAF,OAAE,CAAF,kBACCoE,KAAK,CAACpE,IADP,CAAE,EACS;AACbQ,oBAAI,+BACC4D,KAAK,CAACpE,IAAN,CAAWQ,IADZ,IAEF6D,MAAM,CAACjD,GAFL;AADS,eADT;AADE,aADH,CAAP;AAUD;AAED;AACA;AACA;;AAEA,aAAK,yDAAL;AAAmC;AACjC,mBAAO,MAAP,OAAO,CAAP,kBACKgD,KADL,CAAO,EACG;AACRpE,kBAAI,EAAE,MAAF,OAAE,CAAF,kBACCoE,KAAK,CAACpE,IADP,CAAE,EACS;AACbM,uBAAO,EAAE8D,KAAK,CAACpE,IAAN,CAAWM,OAAX,CACNgE,MADM,CACC,UAACzD,MAAD,EAASZ,KAAT;AAAA,yBAAmBoE,MAAM,CAACN,QAAP,KAAoB9D,KAAvC;AAAA,iBADD;AADI,eADT;AADE,aADH,CAAP;AAQD;AAED;AACA;AACA;;AAEA,aAAK,sDAAL;AAAgC;AAC9B,mBAAO,MAAP,OAAO,CAAP,kBACKmE,KADL,CAAO,EACG;AACRpE,kBAAI,EAAE,MAAF,OAAE,CAAF,kBACCoE,KAAK,CAACpE,IADP,CAAE,EACS;AACbQ,oBAAI,EAAE4D,KAAK,CAACpE,IAAN,CAAWQ,IAAX,CACH8D,MADG,CACI,UAAClD,GAAD,EAAMnB,KAAN;AAAA,yBAAgBoE,MAAM,CAACN,QAAP,KAAoB9D,KAApC;AAAA,iBADJ;AADO,eADT;AADE,aADH,CAAP;AAQD;;AAED;AAAS;AACP,mBAAOmE,KAAP;AACD;AAjFH;AAoFD;;AAEM,QAAMG,WAAW,GAA+B;AACrDC,SAAG,EAAEL;AADgD,KAAhD;;;;;;;;;;;;;;;;ACpGP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;;;AAIO,QAAMM,aAAa,GAAG,SAAhBA,aAAgB,CAACL,KAAD;AAAA,aAAqBA,KAAK,CAACI,GAA3B;AAAA,KAAtB;;AAEA,QAAME,UAAU,GAAG,mEACxBD,aADwB,EAExB,UAACL,KAAD;AAAA,aAAyBA,KAAK,CAACpE,IAA/B;AAAA,KAFwB,CAAnB;;;;;;;;;;;;;;;;ACNP;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM2E,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"content\">\n      <div class=\"title\">\n        Grid Layout Builder\n      </div>\n\n      <app-grid-view>\n      </app-grid-view>\n    </div>\n\n    <app-sidebar>\n    </app-sidebar>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","// Angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { AppRoutingModule } from './app-routing.module';\n\n// ngrx\nimport { StoreModule } from '@ngrx/store';\nimport { appReducers } from './store/app.reducer';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n// Services\nimport { FormsService } from './services';\n\n// Components\nimport { AppComponent } from './app.component';\nimport {\n  AxisFormComponent,\n  GridFormComponent,\n  GridViewComponent,\n  SidebarComponent\n} from './components';\n\n// NG-Carbon\nimport { ButtonModule as CarbonButtonModule } from '@sage/ng-carbon/button';\nimport { DropdownModule as CarbonDropdownModule } from '@sage/ng-carbon/dropdown';\nimport { InputTextModule as CarbonInputTextModule } from '@sage/ng-carbon/input-text';\nimport { CheckboxModule as CarbonCheckboxModule } from '@sage/ng-carbon/checkbox';\nimport { IconModule as CarbonIconModule } from '@sage/ng-carbon/icon';\nimport { TabsModule as CarbonTabsModule } from '@sage/ng-carbon/tabs';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({maxAge: 20}),\n    CarbonButtonModule,\n    CarbonDropdownModule,\n    CarbonInputTextModule,\n    CarbonCheckboxModule,\n    CarbonIconModule,\n    CarbonTabsModule\n  ],\n  declarations: [\n    AppComponent,\n    AxisFormComponent,\n    GridFormComponent,\n    GridViewComponent,\n    SidebarComponent\n  ],\n  providers: [\n    FormsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Angular\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-axis-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"axisForm\"\r\n      [formGroup]=\"axisForm\"\r\n      (ngSubmit)=\"addAxis()\"\r\n    >\r\n      <div class=\"input-field\">\r\n        <sds-input-text\r\n          formControlName=\"size\"\r\n          placeholderText=\"size..\"\r\n          errorType=\"error\"\r\n          [errors]=\"isFieldInvalid(axisForm, 'size')\"\r\n        >\r\n        </sds-input-text>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <sds-dropdown\r\n          formControlName=\"unit\"\r\n          placeholder=\"unit..\"\r\n          errorType=\"error\"\r\n          [errors]=\"isFieldInvalid(axisForm, 'unit')\"\r\n        >\r\n          <sds-dropdown-option\r\n            *ngFor=\"let option of axisUnits\"\r\n            [value]=\"option\"\r\n          >\r\n            {{ option }}\r\n          </sds-dropdown-option>\r\n        </sds-dropdown>\r\n      </div>\r\n\r\n      <sds-button type=\"submit\">Add</sds-button>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./axis-form.component.scss']\r\n})\r\nexport class AxisFormComponent {\r\n  @Input()\r\n  axisForm: FormGroup;\r\n\r\n  @Output()\r\n  axisAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  axisUnits = [\r\n    'fr',\r\n    '%',\r\n    'px',\r\n    'auto'\r\n  ];\r\n\r\n  addAxis() {\r\n    this.axisForm.markAllAsTouched();\r\n\r\n    if (!this.axisForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.axisAdded.emit();\r\n  }\r\n\r\n  isFieldInvalid(form: FormGroup, field: string): string {\r\n    return form.get(field).touched && form.get(field).errors\r\n      ? 'This field is required.'\r\n      : null;\r\n  }\r\n}\r\n","// Angular\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-grid-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"gridForm\"\r\n      [formGroup]=\"gridForm\"\r\n    >\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Column Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"columnGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Row Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"rowGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <sds-checkbox\r\n          formControlName=\"fillGrid\"\r\n          size=\"large\"\r\n        >\r\n          Fill grid?\r\n        </sds-checkbox>\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./grid-form.component.scss']\r\n})\r\nexport class GridFormComponent {\r\n  @Input()\r\n  gridForm: FormGroup;\r\n}\r\n","// Angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n// ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport * as BuilderSelectors from '../../store/app.selector';\r\nimport { DeleteColumn, DeleteRow } from 'src/app/store/app.action';\r\n\r\n// libs\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n// Models\r\nimport { GridModel } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-grid-view',\r\n  template: `\r\n    <div class=\"grid-view\">\r\n      <div\r\n        *ngIf=\"grid.columns.length > 0\"\r\n        class=\"columns\"\r\n        [style]=\"columnStyles\"\r\n      >\r\n        <div\r\n          *ngFor=\"let col of columnCount; let i = index\"\r\n          tabIndex=\"0\"\r\n          (click)=\"removeColumn(i)\"\r\n        >\r\n          DELETE\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"grid.rows.length > 0\"\r\n        class=\"rows\"\r\n        [style]=\"rowStyles\"\r\n      >\r\n        <div\r\n          *ngFor=\"let row of rowCount; let i = index\"\r\n          tabIndex=\"0\"\r\n          (click)=\"removeRow(i)\"\r\n        >\r\n          DELETE\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        id=\"grid\"\r\n        class=\"grid\"\r\n        [style]=\"styles\"\r\n      >\r\n        <ng-container *ngIf=\"grid?.fillGrid\">\r\n          <div\r\n            *ngFor=\"let item of count\"\r\n            class=\"grid__item\"\r\n          >\r\n            ITEM\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./grid-view.component.scss']\r\n})\r\nexport class GridViewComponent implements OnInit, OnDestroy {\r\n  grid: GridModel;\r\n\r\n  unsubscribe$: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.select(BuilderSelectors.selectGrid)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe(grid => {\r\n        this.grid = grid;\r\n      });\r\n  }\r\n\r\n  removeColumn(index: number) {\r\n    this.store.dispatch(new DeleteColumn(index));\r\n  }\r\n\r\n  removeRow(index: number) {\r\n    this.store.dispatch(new DeleteRow(index));\r\n  }\r\n\r\n  get columnCount() {\r\n    return new Array(this.grid.columns.length);\r\n  }\r\n\r\n  get rowCount() {\r\n    return new Array(this.grid.rows.length);\r\n  }\r\n\r\n  get count() {\r\n    return new Array(this.grid.columns.length * Math.max(1, this.grid.rows.length));\r\n  }\r\n\r\n  get columnStyles() {\r\n    return {\r\n      gridTemplateColumns: this.grid.columns.map(column => `${column.size}${column.unit}`).join(' '),\r\n      gridColumnGap: this.grid.columnGap + 'px'\r\n    };\r\n  }\r\n\r\n  get rowStyles() {\r\n    return {\r\n      gridTemplateRows: this.grid.rows.map(row => `${row.size}${row.unit}`).join(' '),\r\n      gridRowGap: this.grid.rowGap + 'px'\r\n    };\r\n  }\r\n\r\n  get styles() {\r\n    return {\r\n      display: 'grid',\r\n      ...this.columnStyles,\r\n      ...this.rowStyles\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","export * from './axis-form/axis-form.component';\r\nexport * from './grid-form/grid-form.component';\r\nexport * from './grid-view/grid-view.component';\r\nexport * from './sidebar/sidebar.component';\r\n","// Angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// Services\r\nimport { FormsService } from 'src/app/services';\r\n\r\n// ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport * as BuilderSelectors from '../../store/app.selector';\r\nimport { UpdateGrid, AddColumn, AddRow } from 'src/app/store/app.action';\r\n\r\n// rxjs\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `\r\n    <div class=\"sidebar\">\r\n      <!-- <div\r\n        class=\"sidebar__toggle\"\r\n        (click)=\"toggleSidebar()\"\r\n      >\r\n        <sds-icon\r\n          type=\"dark-background\"\r\n          [iconType]=\"open ? 'arrow_left' : 'arrow_right'\"\r\n        >\r\n        </sds-icon>\r\n      </div> -->\r\n\r\n      <div class=\"heading\">Configuration</div>\r\n\r\n      <app-grid-form [gridForm]=\"gridForm\">\r\n      </app-grid-form>\r\n\r\n      <hr/>\r\n\r\n      <sds-tabs>\r\n        <sds-tab>\r\n          <sds-tab-header (tabSelected)=\"columnForm.reset()\">\r\n            Add Column\r\n          </sds-tab-header>\r\n          <sds-tab-content>\r\n            <app-axis-form\r\n              [axisForm]=\"columnForm\"\r\n              (axisAdded)=\"addColumn()\"\r\n            >\r\n            </app-axis-form>\r\n          </sds-tab-content>\r\n        </sds-tab>\r\n\r\n        <sds-tab>\r\n          <sds-tab-header (tabSelected)=\"rowForm.reset()\">\r\n            Add Row\r\n          </sds-tab-header>\r\n          <sds-tab-content>\r\n            <app-axis-form\r\n              [axisForm]=\"rowForm\"\r\n              (axisAdded)=\"addRow()\"\r\n            >\r\n            </app-axis-form>\r\n          </sds-tab-content>\r\n        </sds-tab>\r\n      </sds-tabs>\r\n\r\n      <hr/>\r\n\r\n      <sds-button (clickEvent)=\"getStyles()\">\r\n        Get Styles\r\n      </sds-button>\r\n\r\n      <pre\r\n        *ngIf=\"generatedStyles\"\r\n        class=\"output-styles\"\r\n      >\r\n#grid &#123;\r\n    {{ generatedStyles }}\r\n&#125;\r\n</pre>\r\n\r\n    </div>\r\n  `,\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  gridForm: FormGroup;\r\n  columnForm: FormGroup;\r\n  rowForm: FormGroup;\r\n\r\n  generatedStyles: string;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private formsService: FormsService) {}\r\n\r\n  ngOnInit() {\r\n    this.store.select(BuilderSelectors.selectGrid)\r\n      .pipe(take(1))\r\n      .subscribe(grid => {\r\n        this.gridForm = this.formsService.createGridForm(grid);\r\n\r\n        this.gridForm.valueChanges.subscribe(updatedGrid => {\r\n          this.store.dispatch(new UpdateGrid(updatedGrid));\r\n        });\r\n      });\r\n\r\n    this.columnForm = this.formsService.createAxisForm();\r\n    this.rowForm = this.formsService.createAxisForm();\r\n  }\r\n\r\n  addColumn() {\r\n    this.store.dispatch(\r\n      new AddColumn(this.columnForm.value)\r\n    );\r\n    this.columnForm.reset();\r\n  }\r\n\r\n  addRow() {\r\n    this.store.dispatch(\r\n      new AddRow(this.rowForm.value)\r\n    );\r\n    this.rowForm.reset();\r\n  }\r\n\r\n  getStyles() {\r\n    const styles = document.getElementById('grid').style.cssText;\r\n\r\n    this.generatedStyles = styles.replace(/; /g, ';\\n    ');\r\n  }\r\n}\r\n","import { AxisModel } from './axis.model';\r\n\r\nexport interface GridModel {\r\n  columns: AxisModel[];\r\n  rows: AxisModel[];\r\n  columnGap: number;\r\n  rowGap: number;\r\n  fillGrid: boolean;\r\n}\r\n\r\nexport const getInitialGrid = (): GridModel => {\r\n  return {\r\n    columns: [{ size: '1', unit: 'fr' }, { size: '1', unit: 'fr' }],\r\n    rows: [{ size: '1', unit: 'fr' }, { size: '1', unit: 'fr' }],\r\n    columnGap: 10,\r\n    rowGap: 10,\r\n    fillGrid: true\r\n  };\r\n};\r\n","export * from './axis.model';\r\nexport * from './grid.model';\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\n@Injectable()\r\nexport class FormsService {\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  createGridForm(grid: GridModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      columnGap: grid.columnGap,\r\n      rowGap: grid.rowGap,\r\n      fillGrid: grid.fillGrid,\r\n      // columns: this.formBuilder.array([\r\n      //   ...grid.columns.map(column => this.createAxisForm(column))\r\n      // ]),\r\n      // rows: this.formBuilder.array([\r\n      //   ...grid.rows.map(row => this.createAxisForm(row))\r\n      // ])\r\n    });\r\n  }\r\n\r\n  createAxisForm(axis?: AxisModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      size: [ axis?.size ?? '', Validators.required],\r\n      unit: [ axis?.unit ?? null, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export * from './forms.service';\r\n","// ngrx\r\nimport { Action } from '@ngrx/store';\r\n\r\n// Models\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Update Grid\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const UPDATE_GRID = '[Builder] UPDATE_GRID';\r\n\r\nexport class UpdateGrid implements Action {\r\n  readonly type = UPDATE_GRID;\r\n\r\n  constructor(public grid: GridModel) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Add Column\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const ADD_COLUMN = '[Builder] ADD_COLUMN';\r\n\r\nexport class AddColumn implements Action {\r\n  readonly type = ADD_COLUMN;\r\n\r\n  constructor(public column: AxisModel) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Add Row\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const ADD_ROW = '[Builder] ADD_ROW';\r\n\r\nexport class AddRow implements Action {\r\n  readonly type = ADD_ROW;\r\n\r\n  constructor(public row: AxisModel) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Delete Column\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const DELETE_COLUMN = '[Builder] DELETE_COLUMN';\r\n\r\nexport class DeleteColumn implements Action {\r\n  readonly type = DELETE_COLUMN;\r\n\r\n  constructor(public position: number) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Delete Row\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const DELETE_ROW = '[Builder] DELETE_ROW';\r\n\r\nexport class DeleteRow implements Action {\r\n  readonly type = DELETE_ROW;\r\n\r\n  constructor(public position: number) {}\r\n}\r\n\r\nexport type All =\r\n  UpdateGrid\r\n  | AddColumn\r\n  | AddRow\r\n  | DeleteColumn\r\n  | DeleteRow;\r\n","// ngrx\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as BuilderActions from './app.action';\r\n\r\n// Models\r\nimport { AppState, BuilderState } from './app.state';\r\nimport { getInitialGrid } from '../models';\r\n\r\nconst defaultBuilderState: BuilderState = {\r\n  grid: getInitialGrid()\r\n};\r\n\r\nexport function builderReducer(state: BuilderState = defaultBuilderState, action: BuilderActions.All): BuilderState {\r\n\r\n  switch (action.type) {\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Update Grid\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.UPDATE_GRID: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          ...action.grid\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Add Column\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.ADD_COLUMN: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          columns: [\r\n            ...state.grid.columns,\r\n            action.column\r\n          ]\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Add Row\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.ADD_ROW: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          rows: [\r\n            ...state.grid.rows,\r\n            action.row\r\n          ]\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Delete Column\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.DELETE_COLUMN: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          columns: state.grid.columns\r\n            .filter((column, index) => action.position !== index)\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Delete Row\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.DELETE_ROW: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          rows: state.grid.rows\r\n            .filter((row, index) => action.position !== index)\r\n        }\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const appReducers: ActionReducerMap<AppState> = {\r\n  app: builderReducer\r\n};\r\n","// ngrx\r\nimport { createSelector } from '@ngrx/store';\r\nimport { AppState, BuilderState } from './app.state';\r\n\r\nexport const selectBuilder = (state: AppState) => state.app;\r\n\r\nexport const selectGrid = createSelector(\r\n  selectBuilder,\r\n  (state: BuilderState) => state.grid\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}