{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/axis-form/axis-form.component.ts","webpack:///src/app/components/grid-form/grid-form.component.ts","webpack:///src/app/components/grid-view/grid-view.component.ts","webpack:///src/app/components/index.ts","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/models/axis.model.ts","webpack:///src/app/models/grid.model.ts","webpack:///src/app/models/index.ts","webpack:///src/app/pipes/camel-to-kebab.pipe.ts","webpack:///src/app/pipes/index.ts","webpack:///src/app/services/forms.service.ts","webpack:///src/app/services/index.ts","webpack:///src/app/store/app.action.ts","webpack:///src/app/store/app.reducer.ts","webpack:///src/app/store/app.selector.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","store","formsService","styles$","select","html$","pipe","subscribe","grid","gridForm","createGridForm","valueChanges","updatedGrid","dispatch","columnForm","createAxisForm","rowForm","columnForms","get","push","size","unit","rowForms","addColumn","addRow","selector","template","styleUrls","AppModule","instrument","maxAge","declarations","providers","bootstrap","AxisFormComponent","axisRemoved","axisUnits","emit","form","field","touched","errors","includes","axisForm","value","GridFormComponent","columnAdded","rowAdded","index","removeAt","GridViewComponent","unsubscribe$","next","complete","Array","columns","length","Math","max","rows","SidebarComponent","Units","getInitialAxis","getInitialGrid","columnGap","rowGap","fillGrid","CamelToKebabPipe","camelCaseString","replace","toLowerCase","name","FormsService","formBuilder","group","array","map","column","row","axis","required","UPDATE_GRID","UpdateGrid","type","defaultBuilderState","builderReducer","state","action","appReducers","app","selectBuilder","selectGrid","createAxisTemplateStyle","selectGridStyle","display","gridTemplateColumns","join","gridColumnGap","gridTemplateRows","gridRowGap","selectHTML","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// Angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\n\n// Services\nimport { FormsService } from './services';\n\n// ngrx\nimport { Store } from '@ngrx/store';\nimport { AppState } from './store/app.state';\nimport * as BuilderSelectors from './store/app.selector';\nimport { UpdateGrid } from './store/app.action';\n\n// rxjs\nimport { take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-sidebar>\n      <div class=\"title\">\n        Grid Layout Builder\n      </div>\n\n      <app-grid-form\n        [gridForm]=\"gridForm\"\n        (columnAdded)=\"addColumn()\"\n        (rowAdded)=\"addRow()\"\n      >\n      </app-grid-form>\n    </app-sidebar>\n\n    <div class=\"content\">\n      <app-grid-view>\n      </app-grid-view>\n    </div>\n\n    <app-sidebar>\n      <div class=\"heading\">CSS:</div>\n\n      <pre>\n        <div class=\"generated-styles\">.grid-container &#123;\n<span\n  *ngFor=\"let style of (styles$ | async) | keyvalue\"\n  class=\"css-style\"\n>  {{ style.key | camelToKebab }}: {{ style.value }};\n</span>&#125;</div>\n      </pre>\n\n      <div class=\"heading\">HTML:</div>\n\n      <pre>\n        <div class=\"generated-styles\">{{ html$ | async }}</div>\n      </pre>\n    </app-sidebar>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  gridForm: FormGroup;\n  columnForm: FormGroup;\n  rowForm: FormGroup;\n\n  styles$: Observable<{[key: string]: any}> =\n    this.store.select(BuilderSelectors.selectGridStyle);\n\n  html$: Observable<string> =\n   this.store.select(BuilderSelectors.selectHTML);\n\n  constructor(\n    private store: Store<AppState>,\n    private formsService: FormsService) {}\n\n  ngOnInit() {\n    this.store.select(BuilderSelectors.selectGrid)\n      .pipe(take(1))\n      .subscribe(grid => {\n        this.gridForm = this.formsService.createGridForm(grid);\n\n        this.gridForm.valueChanges.subscribe(updatedGrid => {\n          this.store.dispatch(new UpdateGrid(updatedGrid));\n        });\n      });\n\n    this.columnForm = this.formsService.createAxisForm();\n    this.rowForm = this.formsService.createAxisForm();\n  }\n\n  addColumn() {\n    const columnForms = this.gridForm.get('columns') as FormArray;\n\n    columnForms.push(this.formsService.createAxisForm(\n      { size: '1', unit: 'fr' }\n    ));\n  }\n\n  addRow() {\n    const rowForms = this.gridForm.get('rows') as FormArray;\n\n    rowForms.push(this.formsService.createAxisForm(\n      { size: '1', unit: 'fr' }\n    ));\n  }\n\n}\n","// Angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Modules\nimport { AppRoutingModule } from './app-routing.module';\n\n// ngrx\nimport { StoreModule } from '@ngrx/store';\nimport { appReducers } from './store/app.reducer';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n// Services\nimport { FormsService } from './services';\n\n// Components\nimport { AppComponent } from './app.component';\nimport {\n  AxisFormComponent,\n  GridFormComponent,\n  GridViewComponent,\n  SidebarComponent\n} from './components';\n\n// NG-Carbon\nimport { ButtonModule as CarbonButtonModule } from '@sage/ng-carbon/button';\nimport { DropdownModule as CarbonDropdownModule } from '@sage/ng-carbon/dropdown';\nimport { InputTextModule as CarbonInputTextModule } from '@sage/ng-carbon/input-text';\nimport { CheckboxModule as CarbonCheckboxModule } from '@sage/ng-carbon/checkbox';\nimport { IconModule as CarbonIconModule } from '@sage/ng-carbon/icon';\nimport { TabsModule as CarbonTabsModule } from '@sage/ng-carbon/tabs';\nimport { DialogModule as CarbonDialogModule } from '@sage/ng-carbon/dialog';\n\n// Pipes\nimport { CamelToKebabPipe } from './pipes';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({maxAge: 20}),\n    CarbonButtonModule,\n    CarbonDropdownModule,\n    CarbonInputTextModule,\n    CarbonCheckboxModule,\n    CarbonIconModule,\n    CarbonTabsModule,\n    CarbonDialogModule\n  ],\n  declarations: [\n    // Components\n    AppComponent,\n    AxisFormComponent,\n    GridFormComponent,\n    GridViewComponent,\n    SidebarComponent,\n\n    // Pipes\n    CamelToKebabPipe\n  ],\n  providers: [\n    FormsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// Angular\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// Models\r\nimport { Units } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-axis-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"axisForm\"\r\n      class=\"axis-form\"\r\n      [formGroup]=\"axisForm\"\r\n    >\r\n      <ng-container *ngIf=\"showSizeInput\">\r\n        <sds-input-text\r\n          *ngIf=\"axisForm.get('unit').value === 'minmax'; else numberInput\"\r\n          class=\"axis-form__size\"\r\n          formControlName=\"size\"\r\n          placeholderText=\"min, max\"\r\n          errorType=\"error\"\r\n          [errors]=\"isFieldInvalid(axisForm, 'size')\"\r\n        >\r\n        </sds-input-text>\r\n\r\n        <ng-template #numberInput>\r\n          <input\r\n            class=\"axis-form__size\"\r\n            [class.input-error]=\"isFieldInvalid(axisForm, 'size')\"\r\n            type=\"number\"\r\n            placeholder=\"size\"\r\n            min=\"0\"\r\n            formControlName=\"size\"\r\n          />\r\n        </ng-template>\r\n      </ng-container>\r\n\r\n      <sds-dropdown\r\n        class=\"axis-form__unit\"\r\n        [class.axis-form__unit--stretch]=\"!showSizeInput\"\r\n        formControlName=\"unit\"\r\n        placeholder=\"unit\"\r\n        errorType=\"error\"\r\n        [errors]=\"isFieldInvalid(axisForm, 'unit')\"\r\n      >\r\n        <sds-dropdown-option\r\n          *ngFor=\"let option of axisUnits\"\r\n          [value]=\"option\"\r\n        >\r\n          {{ option }}\r\n        </sds-dropdown-option>\r\n      </sds-dropdown>\r\n\r\n      <sds-button\r\n        class=\"axis-form__delete\"\r\n        buttonType=\"tertiary\"\r\n        [destructive]=\"true\"\r\n        (clickEvent)=\"remove()\"\r\n      >\r\n        <sds-icon iconType=\"close\"></sds-icon>\r\n      </sds-button>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./axis-form.component.scss']\r\n})\r\nexport class AxisFormComponent {\r\n  @Input()\r\n  axisForm: FormGroup;\r\n\r\n  @Output()\r\n  axisRemoved: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  axisUnits = Units;\r\n\r\n  get showSizeInput() {\r\n    return !['auto', 'min-content', 'max-content'].includes(\r\n      this.axisForm.get('unit').value\r\n    );\r\n  }\r\n\r\n  remove() {\r\n    this.axisRemoved.emit();\r\n  }\r\n\r\n  isFieldInvalid(form: FormGroup, field: string): string {\r\n    return form.get(field).touched && form.get(field).errors\r\n      ? 'This field is required.'\r\n      : null;\r\n  }\r\n}\r\n","// Angular\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-grid-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"gridForm\"\r\n      [formGroup]=\"gridForm\"\r\n    >\r\n      <div class=\"sub-heading\">Columns:</div>\r\n\r\n      <sds-button\r\n        class=\"add-button\"\r\n        type=\"button\"\r\n        (clickEvent)=\"addColumn()\"\r\n      >\r\n        Add\r\n      </sds-button>\r\n      <app-axis-form\r\n        *ngFor=\"let axisForm of columnForms.controls; let i = index\"\r\n        [axisForm]=\"axisForm\"\r\n        (axisRemoved)=\"removeColumn(i)\"\r\n      >\r\n      </app-axis-form>\r\n\r\n      <div class=\"sub-heading\">Rows:</div>\r\n      <sds-button\r\n        class=\"add-button\"\r\n        type=\"button\"\r\n        (clickEvent)=\"addRow()\"\r\n      >\r\n        Add\r\n      </sds-button>\r\n      <app-axis-form\r\n        *ngFor=\"let axisForm of rowForms.controls; let i = index\"\r\n        [axisForm]=\"axisForm\"\r\n        (axisRemoved)=\"removeRow(i)\"\r\n      >\r\n      </app-axis-form>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Column Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"columnGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Row Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"rowGap\"/>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./grid-form.component.scss']\r\n})\r\nexport class GridFormComponent {\r\n  @Input()\r\n  gridForm: FormGroup;\r\n\r\n  @Output()\r\n  columnAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output()\r\n  rowAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  get columnForms() {\r\n    return this.gridForm.get('columns') as FormArray;\r\n  }\r\n\r\n  get rowForms() {\r\n    return this.gridForm.get('rows') as FormArray;\r\n  }\r\n\r\n  addColumn() {\r\n    this.columnAdded.emit();\r\n  }\r\n\r\n  addRow() {\r\n    this.rowAdded.emit();\r\n  }\r\n\r\n  removeColumn(index: number) {\r\n    const columnForms = this.gridForm.get('columns') as FormArray;\r\n\r\n    columnForms.removeAt(index);\r\n  }\r\n\r\n  removeRow(index: number) {\r\n    const rowForms = this.gridForm.get('rows') as FormArray;\r\n\r\n    rowForms.removeAt(index);\r\n  }\r\n}\r\n","// Angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n// ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport * as BuilderSelectors from '../../store/app.selector';\r\n\r\n// libs\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n// Models\r\nimport { GridModel } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-grid-view',\r\n  template: `\r\n    <div\r\n      id=\"grid\"\r\n      class=\"grid\"\r\n      [style]=\"styles$ | async\"\r\n    >\r\n      <div\r\n        *ngFor=\"let item of count\"\r\n        class=\"grid__item\"\r\n      ></div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./grid-view.component.scss']\r\n})\r\nexport class GridViewComponent implements OnInit, OnDestroy {\r\n  grid: GridModel;\r\n\r\n  styles$: Observable<{[key: string]: any}> =\r\n   this.store.select(BuilderSelectors.selectGridStyle);\r\n\r\n  unsubscribe$: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.select(BuilderSelectors.selectGrid)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe(grid => {\r\n        this.grid = grid;\r\n      });\r\n  }\r\n\r\n  get count() {\r\n    return new Array(this.grid.columns.length * Math.max(1, this.grid.rows.length));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","export * from './axis-form/axis-form.component';\r\nexport * from './grid-form/grid-form.component';\r\nexport * from './grid-view/grid-view.component';\r\nexport * from './sidebar/sidebar.component';\r\n","// Angular\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `\r\n    <div class=\"sidebar\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent {}\r\n","export const Units = ['fr', '%', 'px', 'em', 'auto', 'min-content', 'max-content', 'minmax'];\r\ntype UnitTypeTuple = typeof Units;\r\nexport type UnitType = UnitTypeTuple[number];\r\n\r\nexport interface AxisModel {\r\n  size?: string;\r\n  unit: UnitType;\r\n}\r\n\r\nexport const getInitialAxis = (): AxisModel => {\r\n  return { size: '1', unit: 'fr' };\r\n};\r\n","import { AxisModel, getInitialAxis } from './axis.model';\r\n\r\nexport interface GridModel {\r\n  columns: AxisModel[];\r\n  rows: AxisModel[];\r\n  columnGap: number;\r\n  rowGap: number;\r\n  fillGrid: boolean;\r\n}\r\n\r\nexport const getInitialGrid = (): GridModel => {\r\n  return {\r\n    columns: [\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis()\r\n    ],\r\n    rows: [\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis()\r\n    ],\r\n    columnGap: 1,\r\n    rowGap: 1,\r\n    fillGrid: true\r\n  };\r\n};\r\n","export * from './axis.model';\r\nexport * from './grid.model';\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'camelToKebab'\r\n})\r\nexport class CamelToKebabPipe implements PipeTransform {\r\n  transform(camelCaseString: string): string {\r\n    return camelCaseString.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n  }\r\n}\r\n","export * from './camel-to-kebab.pipe';\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\n@Injectable()\r\nexport class FormsService {\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  createGridForm(grid: GridModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      columnGap: grid.columnGap,\r\n      rowGap: grid.rowGap,\r\n      fillGrid: grid.fillGrid,\r\n      columns: this.formBuilder.array([\r\n        ...grid.columns.map(column => this.createAxisForm(column))\r\n      ]),\r\n      rows: this.formBuilder.array([\r\n        ...grid.rows.map(row => this.createAxisForm(row))\r\n      ])\r\n    });\r\n  }\r\n\r\n  createAxisForm(axis?: AxisModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      size: [ axis?.size ?? '', Validators.required],\r\n      unit: [ axis?.unit ?? null, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export * from './forms.service';\r\n","// ngrx\r\nimport { Action } from '@ngrx/store';\r\n\r\n// Models\r\nimport { GridModel } from '../models';\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Update Grid\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const UPDATE_GRID = '[Builder] UPDATE_GRID';\r\n\r\nexport class UpdateGrid implements Action {\r\n  readonly type = UPDATE_GRID;\r\n\r\n  constructor(public grid: GridModel) {}\r\n}\r\n\r\nexport type All =\r\n  UpdateGrid;\r\n","// ngrx\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as BuilderActions from './app.action';\r\n\r\n// Models\r\nimport { AppState, BuilderState } from './app.state';\r\nimport { getInitialGrid } from '../models';\r\n\r\nconst defaultBuilderState: BuilderState = {\r\n  grid: getInitialGrid()\r\n};\r\n\r\nexport function builderReducer(state: BuilderState = defaultBuilderState, action: BuilderActions.All): BuilderState {\r\n\r\n  switch (action.type) {\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Update Grid\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.UPDATE_GRID: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          ...action.grid\r\n        }\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const appReducers: ActionReducerMap<AppState> = {\r\n  app: builderReducer\r\n};\r\n","// ngrx\r\nimport { createSelector } from '@ngrx/store';\r\nimport { AppState, BuilderState } from './app.state';\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\nexport const selectBuilder = (state: AppState) => state.app;\r\n\r\nexport const selectGrid = createSelector(\r\n  selectBuilder,\r\n  (state: BuilderState) => state.grid\r\n);\r\n\r\nconst createAxisTemplateStyle = (axis: AxisModel) => {\r\n  switch (axis.unit) {\r\n    case 'auto':\r\n    case 'min-content':\r\n    case 'max-content': {\r\n      return `${axis.unit}`;\r\n    }\r\n\r\n    case 'minmax': {\r\n      return `${axis.unit}(${axis.size})`;\r\n    }\r\n\r\n    default: {\r\n      return `${axis.size}${axis.unit}`;\r\n    }\r\n  }\r\n};\r\n\r\nexport const selectGridStyle = createSelector(\r\n  selectGrid,\r\n  (grid: GridModel) => {\r\n    return {\r\n      display: 'grid',\r\n      gridTemplateColumns: grid.columns.map(column => createAxisTemplateStyle(column)).join(' '),\r\n      gridColumnGap: grid.columnGap + 'px',\r\n      gridTemplateRows: grid.rows.map(row => createAxisTemplateStyle(row)).join(' '),\r\n      gridRowGap: grid.rowGap + 'px'\r\n    };\r\n  }\r\n);\r\n\r\nexport const selectHTML = createSelector(\r\n  selectGrid,\r\n  (grid: GridModel) => {\r\n    return `<div class=\"grid-container\">\r\n</div>`;\r\n  }\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}