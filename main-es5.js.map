{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/builder-form/builder-form.component.ts","webpack:///src/app/components/grid-view/grid-view.component.ts","webpack:///src/app/components/index.ts","webpack:///src/app/models/grid.model.ts","webpack:///src/app/models/index.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","grid","updateGrid","selector","template","styleUrls","AppModule","declarations","providers","bootstrap","BuilderFormComponent","fb","gridChanged","form","group","columnGap","rowGap","get","valueChanges","subscribe","value","newGrid","emit","columns","rows","updateColumns","updateRows","GridViewComponent","gridElem","nativeElement","style","display","styles","cssText","generatedStyles","replace","Array","Math","max","fr","gridTemplateColumns","repeat","gridTemplateRows","gridColumnGap","gridRowGap","getStyles","getInitialGrid","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { GridModel, getInitialGrid } from './models';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div>\n      <div class=\"text\">Grid Layout Builder</div>\n      <app-builder-form\n        [grid]=\"grid\"\n        (gridChanged)=\"updateGrid($event)\"\n      >\n      </app-builder-form>\n      <app-grid-view [grid]=\"grid\">\n      </app-grid-view>\n    </div>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  grid: GridModel;\n\n  ngOnInit() {\n    this.grid = getInitialGrid();\n  }\n\n  updateGrid(grid: GridModel) {\n    this.grid = grid;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BuilderFormComponent, GridViewComponent } from './components';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    AppComponent,\n    BuilderFormComponent,\n    GridViewComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { GridModel } from '../../models';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-builder-form',\r\n  template: `\r\n    <form class=\"builder-form\" [formGroup]=\"form\">\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"updateColumns(grid.columns + 1)\"\r\n      >\r\n        Add Column\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"grid.columns === 0\"\r\n        (click)=\"updateColumns(grid.columns - 1)\"\r\n      >\r\n        Remove Column\r\n      </button>\r\n\r\n      <button\r\n        type=\"button\"\r\n        (click)=\"updateRows(grid.rows + 1)\"\r\n      >\r\n        Add Row\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"grid.rows === 0\"\r\n        (click)=\"updateRows(grid.rows - 1)\"\r\n      >\r\n        Remove Row\r\n      </button>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Column Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"columnGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Row Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"rowGap\"/>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./builder-form.component.scss']\r\n})\r\nexport class BuilderFormComponent implements OnInit {\r\n  @Input() grid: GridModel;\r\n\r\n  @Output()\r\n  gridChanged: EventEmitter<GridModel> = new EventEmitter<GridModel>();\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      columnGap: this.grid.columnGap,\r\n      rowGap: this.grid.rowGap\r\n    });\r\n\r\n    this.form.get('columnGap').valueChanges.subscribe(value => {\r\n      const newGrid = { ...this.grid, ...{ columnGap: value} };\r\n      this.gridChanged.emit(newGrid);\r\n    });\r\n\r\n    this.form.get('rowGap').valueChanges.subscribe(value => {\r\n      const newGrid = { ...this.grid, ...{ rowGap: value} };\r\n      this.gridChanged.emit(newGrid);\r\n    });\r\n  }\r\n\r\n  updateColumns(value: number) {\r\n    const newGrid = { ...this.grid, ...{ columns: value} };\r\n\r\n    this.gridChanged.emit(newGrid);\r\n  }\r\n\r\n  updateRows(value: number) {\r\n    const newGrid = { ...this.grid, ...{ rows: value} };\r\n\r\n    this.gridChanged.emit(newGrid);\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef, Input, AfterViewInit } from '@angular/core';\r\nimport { GridModel } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-grid-view',\r\n  template: `\r\n    <button (click)=\"getStyles()\">\r\n      Get Styles\r\n    </button>\r\n\r\n    <pre\r\n      *ngIf=\"generatedStyles\"\r\n      class=\"output-styles\"\r\n    >\r\n.grid &#123;\r\n    {{ generatedStyles }}\r\n&#125;\r\n</pre>\r\n\r\n    <div\r\n      #grid\r\n      id=\"grid\"\r\n      class=\"grid\"\r\n      [style]=\"styles\"\r\n    >\r\n      <div\r\n        class=\"grid__item\"\r\n        *ngFor=\"let item of size\"\r\n      >\r\n        ITEM\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./grid-view.component.scss']\r\n})\r\nexport class GridViewComponent implements AfterViewInit {\r\n  @ViewChild('grid') gridElem: ElementRef;\r\n\r\n  @Input() grid: GridModel;\r\n\r\n  generatedStyles: string;\r\n\r\n  ngAfterViewInit() {\r\n    this.gridElem.nativeElement.style.display = 'grid';\r\n  }\r\n\r\n  getStyles() {\r\n    const styles = this.gridElem.nativeElement.style.cssText;\r\n\r\n    this.generatedStyles = styles.replace(/; /g, ';\\n    ');\r\n  }\r\n\r\n  get size() {\r\n    return new Array(this.grid.columns * Math.max(1, this.grid.rows));\r\n  }\r\n\r\n  get styles() {\r\n    const fr = '1fr ';\r\n\r\n    return {\r\n      gridTemplateColumns: fr.repeat(this.grid.columns),\r\n      gridTemplateRows: fr.repeat(this.grid.rows),\r\n      gridColumnGap: this.grid.columnGap + 'px',\r\n      gridRowGap: this.grid.rowGap + 'px',\r\n    };\r\n  }\r\n}\r\n","export * from './builder-form/builder-form.component';\r\nexport * from './grid-view/grid-view.component';\r\n","export interface GridModel {\r\n  columns: number;\r\n  rows: number;\r\n  columnGap: number;\r\n  rowGap: number;\r\n}\r\n\r\nexport const getInitialGrid = (): GridModel => {\r\n  return {\r\n    columns: 2,\r\n    rows: 2,\r\n    columnGap: 10,\r\n    rowGap: 10\r\n  };\r\n};\r\n","export * from './grid.model';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}