{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/axis-form/axis-form.component.ts","./src/app/components/grid-form/grid-form.component.ts","./src/app/components/grid-view/grid-view.component.ts","./src/app/components/index.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/models/axis.model.ts","./src/app/models/grid.model.ts","./src/app/models/index.ts","./src/app/pipes/camel-to-kebab.pipe.ts","./src/app/pipes/index.ts","./src/app/services/forms.service.ts","./src/app/services/index.ts","./src/app/store/app.action.ts","./src/app/store/app.reducer.ts","./src/app/store/app.selector.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// Angular\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\n\n// Services\nimport { FormsService } from './services';\n\n// ngrx\nimport { Store } from '@ngrx/store';\nimport { AppState } from './store/app.state';\nimport * as BuilderSelectors from './store/app.selector';\nimport { UpdateGrid } from './store/app.action';\n\n// rxjs\nimport { take } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-sidebar>\n      <div class=\"title\">\n        Grid Layout Builder\n      </div>\n\n      <app-grid-form\n        [gridForm]=\"gridForm\"\n        (columnAdded)=\"addColumn()\"\n        (rowAdded)=\"addRow()\"\n      >\n      </app-grid-form>\n    </app-sidebar>\n\n    <div class=\"content\">\n      <app-grid-view>\n      </app-grid-view>\n    </div>\n\n    <app-sidebar>\n      <div class=\"heading\">CSS:</div>\n\n      <pre>\n        <div class=\"generated-styles\">.grid-container &#123;\n<span\n  *ngFor=\"let style of (styles$ | async) | keyvalue\"\n  class=\"css-style\"\n>  {{ style.key | camelToKebab }}: {{ style.value }};\n</span>&#125;</div>\n      </pre>\n\n      <div class=\"heading\">HTML:</div>\n\n      <pre>\n        <div class=\"generated-styles\">{{ html$ | async }}</div>\n      </pre>\n    </app-sidebar>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  gridForm: FormGroup;\n  columnForm: FormGroup;\n  rowForm: FormGroup;\n\n  styles$: Observable<{[key: string]: any}> =\n    this.store.select(BuilderSelectors.selectGridStyle);\n\n  html$: Observable<string> =\n   this.store.select(BuilderSelectors.selectHTML);\n\n  constructor(\n    private store: Store<AppState>,\n    private formsService: FormsService) {}\n\n  ngOnInit() {\n    this.store.select(BuilderSelectors.selectGrid)\n      .pipe(take(1))\n      .subscribe(grid => {\n        this.gridForm = this.formsService.createGridForm(grid);\n\n        this.gridForm.valueChanges.subscribe(updatedGrid => {\n          this.store.dispatch(new UpdateGrid(updatedGrid));\n        });\n      });\n\n    this.columnForm = this.formsService.createAxisForm();\n    this.rowForm = this.formsService.createAxisForm();\n  }\n\n  addColumn() {\n    const columnForms = this.gridForm.get('columns') as FormArray;\n\n    columnForms.push(this.formsService.createAxisForm(\n      { size: '1', unit: 'fr' }\n    ));\n  }\n\n  addRow() {\n    const rowForms = this.gridForm.get('rows') as FormArray;\n\n    rowForms.push(this.formsService.createAxisForm(\n      { size: '1', unit: 'fr' }\n    ));\n  }\n\n}\n","// Angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Modules\nimport { AppRoutingModule } from './app-routing.module';\n\n// ngrx\nimport { StoreModule } from '@ngrx/store';\nimport { appReducers } from './store/app.reducer';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n// Services\nimport { FormsService } from './services';\n\n// Components\nimport { AppComponent } from './app.component';\nimport {\n  AxisFormComponent,\n  GridFormComponent,\n  GridViewComponent,\n  SidebarComponent\n} from './components';\n\n// NG-Carbon\nimport { ButtonModule as CarbonButtonModule } from '@sage/ng-carbon/button';\nimport { DropdownModule as CarbonDropdownModule } from '@sage/ng-carbon/dropdown';\nimport { InputTextModule as CarbonInputTextModule } from '@sage/ng-carbon/input-text';\nimport { CheckboxModule as CarbonCheckboxModule } from '@sage/ng-carbon/checkbox';\nimport { IconModule as CarbonIconModule } from '@sage/ng-carbon/icon';\nimport { TabsModule as CarbonTabsModule } from '@sage/ng-carbon/tabs';\nimport { DialogModule as CarbonDialogModule } from '@sage/ng-carbon/dialog';\n\n// Pipes\nimport { CamelToKebabPipe } from './pipes';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({maxAge: 20}),\n    CarbonButtonModule,\n    CarbonDropdownModule,\n    CarbonInputTextModule,\n    CarbonCheckboxModule,\n    CarbonIconModule,\n    CarbonTabsModule,\n    CarbonDialogModule\n  ],\n  declarations: [\n    // Components\n    AppComponent,\n    AxisFormComponent,\n    GridFormComponent,\n    GridViewComponent,\n    SidebarComponent,\n\n    // Pipes\n    CamelToKebabPipe\n  ],\n  providers: [\n    FormsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","// Angular\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// Models\r\nimport { Units } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-axis-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"axisForm\"\r\n      class=\"axis-form\"\r\n      [formGroup]=\"axisForm\"\r\n    >\r\n      <ng-container *ngIf=\"showSizeInput\">\r\n        <sds-input-text\r\n          *ngIf=\"axisForm.get('unit').value === 'minmax'; else numberInput\"\r\n          class=\"axis-form__size\"\r\n          formControlName=\"size\"\r\n          placeholderText=\"min, max\"\r\n          errorType=\"error\"\r\n          [errors]=\"isFieldInvalid(axisForm, 'size')\"\r\n        >\r\n        </sds-input-text>\r\n\r\n        <ng-template #numberInput>\r\n          <input\r\n            class=\"axis-form__size\"\r\n            [class.input-error]=\"isFieldInvalid(axisForm, 'size')\"\r\n            type=\"number\"\r\n            placeholder=\"size\"\r\n            min=\"0\"\r\n            formControlName=\"size\"\r\n          />\r\n        </ng-template>\r\n      </ng-container>\r\n\r\n      <sds-dropdown\r\n        class=\"axis-form__unit\"\r\n        [class.axis-form__unit--stretch]=\"!showSizeInput\"\r\n        formControlName=\"unit\"\r\n        placeholder=\"unit\"\r\n        errorType=\"error\"\r\n        [errors]=\"isFieldInvalid(axisForm, 'unit')\"\r\n      >\r\n        <sds-dropdown-option\r\n          *ngFor=\"let option of axisUnits\"\r\n          [value]=\"option\"\r\n        >\r\n          {{ option }}\r\n        </sds-dropdown-option>\r\n      </sds-dropdown>\r\n\r\n      <sds-button\r\n        class=\"axis-form__delete\"\r\n        buttonType=\"tertiary\"\r\n        [destructive]=\"true\"\r\n        (clickEvent)=\"remove()\"\r\n      >\r\n        <sds-icon iconType=\"close\"></sds-icon>\r\n      </sds-button>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./axis-form.component.scss']\r\n})\r\nexport class AxisFormComponent {\r\n  @Input()\r\n  axisForm: FormGroup;\r\n\r\n  @Output()\r\n  axisRemoved: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  axisUnits = Units;\r\n\r\n  get showSizeInput() {\r\n    return !['auto', 'min-content', 'max-content'].includes(\r\n      this.axisForm.get('unit').value\r\n    );\r\n  }\r\n\r\n  remove() {\r\n    this.axisRemoved.emit();\r\n  }\r\n\r\n  isFieldInvalid(form: FormGroup, field: string): string {\r\n    return form.get(field).touched && form.get(field).errors\r\n      ? 'This field is required.'\r\n      : null;\r\n  }\r\n}\r\n","// Angular\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-grid-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"gridForm\"\r\n      [formGroup]=\"gridForm\"\r\n    >\r\n      <div class=\"sub-heading\">Columns:</div>\r\n\r\n      <sds-button\r\n        class=\"add-button\"\r\n        type=\"button\"\r\n        (clickEvent)=\"addColumn()\"\r\n      >\r\n        Add\r\n      </sds-button>\r\n      <app-axis-form\r\n        *ngFor=\"let axisForm of columnForms.controls; let i = index\"\r\n        [axisForm]=\"axisForm\"\r\n        (axisRemoved)=\"removeColumn(i)\"\r\n      >\r\n      </app-axis-form>\r\n\r\n      <div class=\"sub-heading\">Rows:</div>\r\n      <sds-button\r\n        class=\"add-button\"\r\n        type=\"button\"\r\n        (clickEvent)=\"addRow()\"\r\n      >\r\n        Add\r\n      </sds-button>\r\n      <app-axis-form\r\n        *ngFor=\"let axisForm of rowForms.controls; let i = index\"\r\n        [axisForm]=\"axisForm\"\r\n        (axisRemoved)=\"removeRow(i)\"\r\n      >\r\n      </app-axis-form>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Column Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"columnGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Row Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"rowGap\"/>\r\n        </label>\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./grid-form.component.scss']\r\n})\r\nexport class GridFormComponent {\r\n  @Input()\r\n  gridForm: FormGroup;\r\n\r\n  @Output()\r\n  columnAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output()\r\n  rowAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  get columnForms() {\r\n    return this.gridForm.get('columns') as FormArray;\r\n  }\r\n\r\n  get rowForms() {\r\n    return this.gridForm.get('rows') as FormArray;\r\n  }\r\n\r\n  addColumn() {\r\n    this.columnAdded.emit();\r\n  }\r\n\r\n  addRow() {\r\n    this.rowAdded.emit();\r\n  }\r\n\r\n  removeColumn(index: number) {\r\n    const columnForms = this.gridForm.get('columns') as FormArray;\r\n\r\n    columnForms.removeAt(index);\r\n  }\r\n\r\n  removeRow(index: number) {\r\n    const rowForms = this.gridForm.get('rows') as FormArray;\r\n\r\n    rowForms.removeAt(index);\r\n  }\r\n}\r\n","// Angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n// ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport * as BuilderSelectors from '../../store/app.selector';\r\n\r\n// libs\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n// Models\r\nimport { GridModel } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-grid-view',\r\n  template: `\r\n    <div\r\n      id=\"grid\"\r\n      class=\"grid\"\r\n      [style]=\"styles$ | async\"\r\n    >\r\n      <div\r\n        *ngFor=\"let item of count\"\r\n        class=\"grid__item\"\r\n      ></div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./grid-view.component.scss']\r\n})\r\nexport class GridViewComponent implements OnInit, OnDestroy {\r\n  grid: GridModel;\r\n\r\n  styles$: Observable<{[key: string]: any}> =\r\n   this.store.select(BuilderSelectors.selectGridStyle);\r\n\r\n  unsubscribe$: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.select(BuilderSelectors.selectGrid)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe(grid => {\r\n        this.grid = grid;\r\n      });\r\n  }\r\n\r\n  get count() {\r\n    return new Array(this.grid.columns.length * Math.max(1, this.grid.rows.length));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","export * from './axis-form/axis-form.component';\r\nexport * from './grid-form/grid-form.component';\r\nexport * from './grid-view/grid-view.component';\r\nexport * from './sidebar/sidebar.component';\r\n","// Angular\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `\r\n    <div class=\"sidebar\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent {}\r\n","export const Units = ['fr', '%', 'px', 'em', 'auto', 'min-content', 'max-content', 'minmax'];\r\ntype UnitTypeTuple = typeof Units;\r\nexport type UnitType = UnitTypeTuple[number];\r\n\r\nexport interface AxisModel {\r\n  size?: string;\r\n  unit: UnitType;\r\n}\r\n\r\nexport const getInitialAxis = (): AxisModel => {\r\n  return { size: '1', unit: 'fr' };\r\n};\r\n","import { AxisModel, getInitialAxis } from './axis.model';\r\n\r\nexport interface GridModel {\r\n  columns: AxisModel[];\r\n  rows: AxisModel[];\r\n  columnGap: number;\r\n  rowGap: number;\r\n  fillGrid: boolean;\r\n}\r\n\r\nexport const getInitialGrid = (): GridModel => {\r\n  return {\r\n    columns: [\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis()\r\n    ],\r\n    rows: [\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis(),\r\n      getInitialAxis()\r\n    ],\r\n    columnGap: 1,\r\n    rowGap: 1,\r\n    fillGrid: true\r\n  };\r\n};\r\n","export * from './axis.model';\r\nexport * from './grid.model';\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'camelToKebab'\r\n})\r\nexport class CamelToKebabPipe implements PipeTransform {\r\n  transform(camelCaseString: string): string {\r\n    return camelCaseString.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n  }\r\n}\r\n","export * from './camel-to-kebab.pipe';\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\n@Injectable()\r\nexport class FormsService {\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  createGridForm(grid: GridModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      columnGap: grid.columnGap,\r\n      rowGap: grid.rowGap,\r\n      fillGrid: grid.fillGrid,\r\n      columns: this.formBuilder.array([\r\n        ...grid.columns.map(column => this.createAxisForm(column))\r\n      ]),\r\n      rows: this.formBuilder.array([\r\n        ...grid.rows.map(row => this.createAxisForm(row))\r\n      ])\r\n    });\r\n  }\r\n\r\n  createAxisForm(axis?: AxisModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      size: [ axis?.size ?? '', Validators.required],\r\n      unit: [ axis?.unit ?? null, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export * from './forms.service';\r\n","// ngrx\r\nimport { Action } from '@ngrx/store';\r\n\r\n// Models\r\nimport { GridModel } from '../models';\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Update Grid\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const UPDATE_GRID = '[Builder] UPDATE_GRID';\r\n\r\nexport class UpdateGrid implements Action {\r\n  readonly type = UPDATE_GRID;\r\n\r\n  constructor(public grid: GridModel) {}\r\n}\r\n\r\nexport type All =\r\n  UpdateGrid;\r\n","// ngrx\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as BuilderActions from './app.action';\r\n\r\n// Models\r\nimport { AppState, BuilderState } from './app.state';\r\nimport { getInitialGrid } from '../models';\r\n\r\nconst defaultBuilderState: BuilderState = {\r\n  grid: getInitialGrid()\r\n};\r\n\r\nexport function builderReducer(state: BuilderState = defaultBuilderState, action: BuilderActions.All): BuilderState {\r\n\r\n  switch (action.type) {\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Update Grid\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.UPDATE_GRID: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          ...action.grid\r\n        }\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const appReducers: ActionReducerMap<AppState> = {\r\n  app: builderReducer\r\n};\r\n","// ngrx\r\nimport { createSelector } from '@ngrx/store';\r\nimport { AppState, BuilderState } from './app.state';\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\nexport const selectBuilder = (state: AppState) => state.app;\r\n\r\nexport const selectGrid = createSelector(\r\n  selectBuilder,\r\n  (state: BuilderState) => state.grid\r\n);\r\n\r\nconst createAxisTemplateStyle = (axis: AxisModel) => {\r\n  switch (axis.unit) {\r\n    case 'auto':\r\n    case 'min-content':\r\n    case 'max-content': {\r\n      return `${axis.unit}`;\r\n    }\r\n\r\n    case 'minmax': {\r\n      return `${axis.unit}(${axis.size})`;\r\n    }\r\n\r\n    default: {\r\n      return `${axis.size}${axis.unit}`;\r\n    }\r\n  }\r\n};\r\n\r\nexport const selectGridStyle = createSelector(\r\n  selectGrid,\r\n  (grid: GridModel) => {\r\n    return {\r\n      display: 'grid',\r\n      gridTemplateColumns: grid.columns.map(column => createAxisTemplateStyle(column)).join(' '),\r\n      gridColumnGap: grid.columnGap + 'px',\r\n      gridTemplateRows: grid.rows.map(row => createAxisTemplateStyle(row)).join(' '),\r\n      gridRowGap: grid.rowGap + 'px'\r\n    };\r\n  }\r\n);\r\n\r\nexport const selectHTML = createSelector(\r\n  selectGrid,\r\n  (grid: GridModel) => {\r\n    return `<div class=\"grid-container\">\r\n</div>`;\r\n  }\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}