{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/builder-form/builder-form.component.ts","./src/app/components/grid-view/grid-view.component.ts","./src/app/components/index.ts","./src/app/models/grid.model.ts","./src/app/models/index.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { GridModel, getInitialGrid } from './models';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div>\n      <div class=\"text\">Grid Layout Builder</div>\n      <app-builder-form\n        [grid]=\"grid\"\n        (gridChanged)=\"updateGrid($event)\"\n      >\n      </app-builder-form>\n\n      <app-grid-view [grid]=\"grid\">\n      </app-grid-view>\n    </div>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  grid: GridModel;\n\n  ngOnInit() {\n    this.grid = getInitialGrid();\n  }\n\n  updateGrid(grid: GridModel) {\n    this.grid = grid;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BuilderFormComponent, GridViewComponent } from './components';\n\nimport { ButtonModule as CarbonButtonModule } from '@sage/ng-carbon/button';\nimport { DropdownModule as CarbonDropdownModule } from '@sage/ng-carbon/dropdown';\nimport { InputTextModule as CarbonInputTextModule } from '@sage/ng-carbon/input-text';\nimport { CheckboxModule as CarbonCheckboxModule } from '@sage/ng-carbon/checkbox';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CarbonButtonModule,\n    CarbonDropdownModule,\n    CarbonInputTextModule,\n    CarbonCheckboxModule\n  ],\n  declarations: [\n    AppComponent,\n    BuilderFormComponent,\n    GridViewComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Output, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { GridModel } from '../../models';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-builder-form',\r\n  template: `\r\n    <form class=\"builder-form\" [formGroup]=\"form\">\r\n      <sds-button\r\n        type=\"button\"\r\n        (clickEvent)=\"showColumnForm = true\"\r\n      >\r\n        Add Column\r\n      </sds-button>\r\n\r\n      <sds-button\r\n        type=\"button\"\r\n        (clickEvent)=\"showRowForm = true\"\r\n      >\r\n        Add Row\r\n      </sds-button>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Column Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"columnGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Row Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"rowGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <sds-checkbox\r\n        formControlName=\"fillGrid\"\r\n        size=\"large\"\r\n      >\r\n        Fill grid?\r\n      </sds-checkbox>\r\n    </form>\r\n\r\n    <form\r\n      *ngIf=\"showColumnForm\"\r\n      [formGroup]=\"columnForm\"\r\n      (ngSubmit)=\"addColumn()\"\r\n    >\r\n      <div class=\"input-field\">\r\n        <label>\r\n          New Column:\r\n          <sds-input-text\r\n            formControlName=\"size\"\r\n            placeholderText=\"size..\"\r\n            errorType=\"error\"\r\n            [errors]=\"isFieldInvalid(columnForm, 'size')\"\r\n          >\r\n          </sds-input-text>\r\n          <sds-dropdown\r\n            formControlName=\"unit\"\r\n            placeholder=\"unit..\"\r\n            errorType=\"error\"\r\n            [errors]=\"isFieldInvalid(columnForm, 'unit')\"\r\n          >\r\n            <sds-dropdown-option\r\n              *ngFor=\"let option of axisUnits\"\r\n              [value]=\"option\"\r\n            >\r\n              {{ option }}\r\n            </sds-dropdown-option>\r\n          </sds-dropdown>\r\n        </label>\r\n      </div>\r\n\r\n      <sds-button type=\"submit\">Add</sds-button>\r\n    </form>\r\n\r\n    <form\r\n      *ngIf=\"showRowForm\"\r\n      [formGroup]=\"rowForm\"\r\n      (ngSubmit)=\"addRow()\"\r\n    >\r\n      <div class=\"input-field\">\r\n        <label>\r\n          New Row:\r\n          <sds-input-text\r\n            formControlName=\"size\"\r\n            placeholderText=\"size..\"\r\n            errorType=\"error\"\r\n            [errors]=\"isFieldInvalid(rowForm, 'size')\"\r\n          >\r\n          </sds-input-text>\r\n          <sds-dropdown\r\n            formControlName=\"unit\"\r\n            placeholder=\"unit..\"\r\n            errorType=\"error\"\r\n            [errors]=\"isFieldInvalid(rowForm, 'unit')\"\r\n          >\r\n            <sds-dropdown-option\r\n              *ngFor=\"let option of axisUnits\"\r\n              [value]=\"option\"\r\n            >\r\n              {{ option }}\r\n            </sds-dropdown-option>\r\n          </sds-dropdown>\r\n        </label>\r\n      </div>\r\n\r\n      <sds-button type=\"submit\">Add</sds-button>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./builder-form.component.scss']\r\n})\r\nexport class BuilderFormComponent implements OnInit {\r\n  @Input() grid: GridModel;\r\n\r\n  @Output()\r\n  gridChanged: EventEmitter<GridModel> = new EventEmitter<GridModel>();\r\n\r\n  form: FormGroup;\r\n  showColumnForm = false;\r\n  columnForm: FormGroup;\r\n  showRowForm = false;\r\n  rowForm: FormGroup;\r\n\r\n  axisUnits = [\r\n    'fr',\r\n    '%',\r\n    'px',\r\n    'auto'\r\n  ];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      columnGap: this.grid.columnGap,\r\n      rowGap: this.grid.rowGap,\r\n      fillGrid: this.grid.fillGrid\r\n    });\r\n\r\n    this.columnForm = this.fb.group({\r\n      size: ['', Validators.required],\r\n      unit: [null, Validators.required]\r\n    });\r\n\r\n    this.rowForm = this.fb.group({\r\n      size: ['', Validators.required],\r\n      unit: [null, Validators.required]\r\n    });\r\n\r\n    this.form.valueChanges.subscribe(value => {\r\n      const newGrid = { ...this.grid, ...value };\r\n      this.gridChanged.emit(newGrid);\r\n      console.log(newGrid);\r\n    });\r\n  }\r\n\r\n  isFieldInvalid(form: FormGroup, field: string): string {\r\n    return form.get(field).touched && form.get(field).errors\r\n      ? 'This field is required.'\r\n      : null;\r\n  }\r\n\r\n  addColumn() {\r\n    this.columnForm.markAllAsTouched();\r\n\r\n    if (!this.columnForm.valid) {\r\n      return;\r\n    }\r\n\r\n    const newColumn = {\r\n      size: this.columnForm.get('size').value,\r\n      unit: this.columnForm.get('unit').value\r\n    };\r\n\r\n    const newGrid = {\r\n      ...this.grid,\r\n      ...{\r\n        columns: [\r\n          ...this.grid.columns,\r\n          newColumn\r\n        ]\r\n      }\r\n    };\r\n\r\n    this.gridChanged.emit(newGrid);\r\n    this.columnForm.reset();\r\n    this.showColumnForm = false;\r\n  }\r\n\r\n  addRow() {\r\n    this.rowForm.markAllAsTouched();\r\n\r\n    if (!this.rowForm.valid) {\r\n      return;\r\n    }\r\n\r\n    const newRow = {\r\n      size: this.rowForm.get('size').value,\r\n      unit: this.rowForm.get('unit').value\r\n    };\r\n\r\n    const newGrid = {\r\n      ...this.grid,\r\n      ...{\r\n        rows: [\r\n          ...this.grid.rows,\r\n          newRow\r\n        ]\r\n      }\r\n    };\r\n\r\n    this.gridChanged.emit(newGrid);\r\n    this.rowForm.reset();\r\n    this.showRowForm = false;\r\n  }\r\n}\r\n","import { Component, ViewChild, ElementRef, Input, AfterViewInit } from '@angular/core';\r\nimport { GridModel } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-grid-view',\r\n  template: `\r\n    <sds-button (clickEvent)=\"getStyles()\">\r\n      Get Styles\r\n    </sds-button>\r\n\r\n    <pre\r\n      *ngIf=\"generatedStyles\"\r\n      class=\"output-styles\"\r\n    >\r\n.grid &#123;\r\n    {{ generatedStyles }}\r\n&#125;\r\n</pre>\r\n\r\n    <div class=\"grid-view\">\r\n\r\n      <div\r\n        *ngIf=\"grid.columns.length > 0\"\r\n        class=\"columns\"\r\n        [style]=\"columnStyles\"\r\n      >\r\n        <div\r\n          *ngFor=\"let col of columnCount; let i = index\"\r\n          tabIndex=\"0\"\r\n          (click)=\"removeColumn(i)\"\r\n        >\r\n          DELETE\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"grid.rows.length > 0\"\r\n        class=\"rows\"\r\n        [style]=\"rowStyles\"\r\n      >\r\n        <div\r\n          *ngFor=\"let row of rowCount; let i = index\"\r\n          tabIndex=\"0\"\r\n          (click)=\"removeRow(i)\"\r\n        >\r\n          DELETE\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        #gridElem\r\n        class=\"grid\"\r\n        [style]=\"styles\"\r\n      >\r\n        <ng-container *ngIf=\"grid?.fillGrid\">\r\n          <div\r\n            *ngFor=\"let item of count\"\r\n            class=\"grid__item\"\r\n          ></div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./grid-view.component.scss']\r\n})\r\nexport class GridViewComponent implements AfterViewInit {\r\n  @ViewChild('gridElem') gridElem: ElementRef;\r\n\r\n  @Input() grid: GridModel;\r\n\r\n  generatedStyles: string;\r\n\r\n  ngAfterViewInit() {\r\n    this.gridElem.nativeElement.style.display = 'grid';\r\n  }\r\n\r\n  getStyles() {\r\n    const styles = this.gridElem.nativeElement.style.cssText;\r\n\r\n    this.generatedStyles = styles.replace(/; /g, ';\\n    ');\r\n  }\r\n\r\n  removeColumn(index: number) {\r\n    this.grid.columns.splice(index, 1);\r\n  }\r\n\r\n  removeRow(index: number) {\r\n    this.grid.rows.splice(index, 1);\r\n  }\r\n\r\n  get columnCount() {\r\n    return new Array(this.grid.columns.length);\r\n  }\r\n\r\n  get rowCount() {\r\n    return new Array(this.grid.rows.length);\r\n  }\r\n\r\n  get count() {\r\n    return new Array(this.grid.columns.length * Math.max(1, this.grid.rows.length));\r\n  }\r\n\r\n  get columnStyles() {\r\n    return {\r\n      gridTemplateColumns: this.grid.columns.map(column => `${column.size}${column.unit}`).join(' '),\r\n      gridColumnGap: this.grid.columnGap + 'px'\r\n    };\r\n  }\r\n\r\n  get rowStyles() {\r\n    return {\r\n      gridTemplateRows: this.grid.rows.map(row => `${row.size}${row.unit}`).join(' '),\r\n      gridRowGap: this.grid.rowGap + 'px'\r\n    };\r\n  }\r\n\r\n  get styles() {\r\n    return {\r\n      ...this.columnStyles,\r\n      ...this.rowStyles\r\n    };\r\n  }\r\n}\r\n","export * from './builder-form/builder-form.component';\r\nexport * from './grid-view/grid-view.component';\r\n","import { AxisModel } from './axis.model';\r\n\r\nexport interface GridModel {\r\n  columns: AxisModel[];\r\n  rows: AxisModel[];\r\n  columnGap: number;\r\n  rowGap: number;\r\n  fillGrid: boolean;\r\n}\r\n\r\nexport const getInitialGrid = (): GridModel => {\r\n  return {\r\n    columns: [{ size: '1', unit: 'fr' }, { size: '1', unit: 'fr' }],\r\n    rows: [{ size: '1', unit: 'fr' }, { size: '1', unit: 'fr' }],\r\n    columnGap: 10,\r\n    rowGap: 10,\r\n    fillGrid: true\r\n  };\r\n};\r\n","export * from './axis.model';\r\nexport * from './grid.model';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}