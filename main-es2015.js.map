{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/axis-form/axis-form.component.ts","./src/app/components/grid-form/grid-form.component.ts","./src/app/components/grid-view/grid-view.component.ts","./src/app/components/index.ts","./src/app/components/sidebar/sidebar.component.ts","./src/app/models/grid.model.ts","./src/app/models/index.ts","./src/app/services/forms.service.ts","./src/app/services/index.ts","./src/app/store/app.action.ts","./src/app/store/app.reducer.ts","./src/app/store/app.selector.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACR;;;AAG/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAmBnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QAdrB,yEACE;QAAA,yEACE;QAAA,gFACF;QAAA,4DAAM;QAEN,2EACgB;QAClB,4DAAM;QAEN,yEACc;;6FAIL,YAAY;cAjBxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,QAAQ,EAAE;;;;;;;;;;;;GAYT;gBACD,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU;AACgD;AACjB;AACwB;AAClB;AAE/C,UAAU;AAC8C;AAExD,OAAO;AACmC;AACQ;AACS;AAE3D,WAAW;AAC+B;AAE1C,aAAa;AACkC;AAMzB;AAEtB,YAAY;AACgE;AACM;AACI;AACJ;AACZ;AACA;;;;AA8B/D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBALT;QACT,sDAAY;KACb,YAxBQ;YACP,uEAAa;YACb,4DAAY;YACZ,oEAAgB;YAChB,0DAAW;YACX,kEAAmB;YACnB,uDAAW,CAAC,OAAO,CAAC,8DAAW,CAAC;YAChC,wEAAmB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC;YAC5C,oEAAkB;YAClB,wEAAoB;YACpB,2EAAqB;YACrB,wEAAoB;YACpB,gEAAgB;YAChB,gEAAgB;SACjB;mIAaU,SAAS,mBAXlB,2DAAY;QACZ,8DAAiB;QACjB,8DAAiB;QACjB,8DAAiB;QACjB,6DAAgB,aAnBhB,uEAAa;QACb,4DAAY;QACZ,oEAAgB;QAChB,0DAAW;QACX,kEAAmB,yIAGnB,oEAAkB;QAClB,wEAAoB;QACpB,2EAAqB;QACrB,wEAAoB;QACpB,gEAAgB;QAChB,gEAAgB;6FAcP,SAAS;cA5BrB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,uEAAa;oBACb,4DAAY;oBACZ,oEAAgB;oBAChB,0DAAW;oBACX,kEAAmB;oBACnB,uDAAW,CAAC,OAAO,CAAC,8DAAW,CAAC;oBAChC,wEAAmB,CAAC,UAAU,CAAC,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC;oBAC5C,oEAAkB;oBAClB,wEAAoB;oBACpB,2EAAqB;oBACrB,wEAAoB;oBACpB,gEAAgB;oBAChB,gEAAgB;iBACjB;gBACD,YAAY,EAAE;oBACZ,2DAAY;oBACZ,8DAAiB;oBACjB,8DAAiB;oBACjB,8DAAiB;oBACjB,6DAAgB;iBACjB;gBACD,SAAS,EAAE;oBACT,sDAAY;iBACb;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU;AAC6D;;;;;;;;IA4B7D,yFAIE;IAAA,uDACF;IAAA,4DAAsB;;;IAHpB,4EAAgB;IAEhB,0DACF;IADE,qFACF;;;;IA3BN,0EAKE;IAFA,wTAAsB;IAEtB,yEACE;IAAA,+EAMiB;IACnB,4DAAM;IAEN,yEACE;IAAA,kFAME;IAAA,oJAIE;IAEJ,4DAAe;IACjB,4DAAM;IAEN,gFAA0B;IAAA,8DAAG;IAAA,4DAAa;IAC5C,4DAAO;;;IA9BL,sFAAsB;IAQlB,0DAA2C;IAA3C,kHAA2C;IAU3C,0DAA2C;IAA3C,kHAA2C;IAGzC,0DAAgC;IAAhC,qFAAgC;;AAarC,MAAM,iBAAiB;IAvC9B;QA4CE,cAAS,GAAuB,IAAI,0DAAY,EAAQ,CAAC;QAEzD,cAAS,GAAG;YACV,IAAI;YACJ,GAAG;YACH,IAAI;YACJ,MAAM;SACP,CAAC;KAiBH;IAfC,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAEjC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACxB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,CAAC;IAED,cAAc,CAAC,IAAe,EAAE,KAAa;QAC3C,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM;YACtD,CAAC,CAAC,yBAAyB;YAC3B,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;;kFA5BU,iBAAiB;iGAAjB,iBAAiB;QApC1B,+GAKE;;QAJA,8EAAgB;;6FAmCT,iBAAiB;cAvC7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCT;gBACD,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAEE,mDAAK;;kBAGL,oDAAM;;;;;;;;;;;;;;AC/CT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU;AACuC;;;;;;IAM7C,0EAIE;IAAA,yEACE;IAAA,wEACE;IAAA,6EACA;IAAA,sEACF;IAAA,4DAAQ;IACV,4DAAM;IAEN,yEACE;IAAA,wEACE;IAAA,0EACA;IAAA,sEACF;IAAA,4DAAQ;IACV,4DAAM;IAEN,yEACE;IAAA,mFAIE;IAAA,wEACF;IAAA,4DAAe;IACjB,4DAAM;IACR,4DAAO;;;IAxBL,sFAAsB;;AA4BrB,MAAM,iBAAiB;;kFAAjB,iBAAiB;iGAAjB,iBAAiB;QA9B1B,gHAIE;;QAHA,8EAAgB;;6FA6BT,iBAAiB;cAjC7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BT;gBACD,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;kBAEE,mDAAK;;;;;;;;;;;;;;ACtCR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU;AACmD;AAKA;AACM;AAEnE,OAAO;AACoC;AACZ;;;;;;IAcvB,yEAKE;IAFA,wVAAyB;IAEzB,mEACF;IAAA,4DAAM;;;IAXR,yEAKE;IAAA,mHAKE;IAEJ,4DAAM;;;IATJ,6EAAsB;IAGpB,0DAA8C;IAA9C,uFAA8C;;;;IAahD,yEAKE;IAFA,0VAAsB;IAEtB,mEACF;IAAA,4DAAM;;;IAXR,yEAKE;IAAA,mHAKE;IAEJ,4DAAM;;;IATJ,0EAAmB;IAGjB,0DAA2C;IAA3C,oFAA2C;;;IAc3C,0EAIE;IAAA,iEACF;IAAA,4DAAM;;;IANR,wEACE;IAAA,4HAIE;IAEJ,qEAAe;;;IALX,0DAA0B;IAA1B,iFAA0B;;AAW/B,MAAM,iBAAiB;IAK5B,YAAoB,KAAsB;QAAtB,UAAK,GAAL,KAAK,CAAiB;QAF1C,iBAAY,GAAkB,IAAI,4CAAO,EAAQ,CAAC;IAEL,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8DAA2B,CAAC;aAC3C,IAAI,CAAC,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;aAClC,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,YAAY,CAAC,KAAa;QACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,qEAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,CAAC,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,kEAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI,QAAQ;QACV,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAClF,CAAC;IAED,IAAI,YAAY;QACd,OAAO;YACL,mBAAmB,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YAC9F,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI;SAC1C,CAAC;IACJ,CAAC;IAED,IAAI,SAAS;QACX,OAAO;YACL,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YAC/E,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI;SACpC,CAAC;IACJ,CAAC;IAED,IAAI,MAAM;QACR,qCACE,OAAO,EAAE,MAAM,IACZ,IAAI,CAAC,YAAY,GACjB,IAAI,CAAC,SAAS,EACjB;IACJ,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;;kFA5DU,iBAAiB;iGAAjB,iBAAiB;QA/C1B,yEACE;QAAA,6GAKE;QASF,6GAKE;QASF,yEAKE;QAAA,+HACE;QAOJ,4DAAM;QACR,4DAAM;;QAzCF,0DAA+B;QAA/B,6FAA+B;QAc/B,0DAA4B;QAA5B,0FAA4B;QAgB5B,0DAAgB;QAAhB,oEAAgB;QAEF,0DAAsB;QAAtB,6GAAsB;;6FAa/B,iBAAiB;cAlD7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA6CT;gBACD,SAAS,EAAE,CAAC,4BAA4B,CAAC;aAC1C;;;;;;;;;;;;;;ACjED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACA;AACA;AACJ;;;;;;;;;;;;;ACH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAU;AACwC;AASW;AACY;AAEzE,OAAO;AAC+B;;;;;;;;;;IA0DhC,yEAIN;IAAA,uDAGA;IAAA,4DAAM;;;IAHN,0DAGA;IAHA,kHAGA;;AAMO,MAAM,gBAAgB;IAO3B,YACU,KAAsB,EACtB,YAA0B;QAD1B,UAAK,GAAL,KAAK,CAAiB;QACtB,iBAAY,GAAZ,YAAY,CAAc;IAAG,CAAC;IAExC,QAAQ;QACN,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,8DAA2B,CAAC;aAC3C,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;aACb,SAAS,CAAC,IAAI,CAAC,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAEvD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;gBACjD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mEAAU,CAAC,WAAW,CAAC,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACrD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;IACpD,CAAC;IAED,SAAS;QACP,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,kEAAS,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CACrC,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CACjB,IAAI,+DAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAC/B,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAED,SAAS;QACP,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;QAE7D,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAC1D,CAAC;;gFA5CU,gBAAgB;gGAAhB,gBAAgB;QAlEzB,yEACE;QAWA,yEAAqB;QAAA,wEAAa;QAAA,4DAAM;QAExC,8EACgB;QAEhB,gEAEA;QAAA,2EACE;QAAA,0EACE;QAAA,oFACE;QADc,4JAAe,sBAAkB,IAAC;QAChD,uEACF;QAAA,4DAAiB;QACjB,kFACE;QAAA,oFAIgB;QAFd,wJAAa,eAAW,IAAC;QAE3B,4DAAgB;QAClB,4DAAkB;QACpB,4DAAU;QAEV,2EACE;QAAA,qFACE;QADc,6JAAe,mBAAe,IAAC;QAC7C,qEACF;QAAA,4DAAiB;QACjB,mFACE;QAAA,oFAIgB;QAFd,wJAAa,YAAQ,IAAC;QAExB,4DAAgB;QAClB,4DAAkB;QACpB,4DAAU;QACZ,4DAAW;QAEX,iEAEA;QAAA,iFACE;QADU,uJAAc,eAAW,IAAC;QACpC,wEACF;QAAA,4DAAa;QAEb,8GAIN;QAKI,4DAAM;;QAhDW,0DAAqB;QAArB,kFAAqB;QAY5B,0DAAuB;QAAvB,oFAAuB;QAavB,0DAAoB;QAApB,iFAAoB;QAe1B,0DAAuB;QAAvB,qFAAuB;;6FAYlB,gBAAgB;cArE5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAgET;gBACD,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AC1ED;AAAA;AAAO,MAAM,cAAc,GAAG,GAAc,EAAE;IAC5C,OAAO;QACL,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC/D,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QAC5D,SAAS,EAAE,EAAE;QACb,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,IAAI;KACf,CAAC;AACJ,CAAC,CAAC;;;;;;;;;;;;;ACjBF;AAAA;AAAA;AAAA;AAA6B;;;;;;;;;;;;;ACD7B;AAAA;AAAA;AAAA;AAA2C;AACyB;;;AAI7D,MAAM,YAAY;IAEvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,cAAc,CAAC,IAAe;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAOxB,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,IAAgB;;QAC7B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,IAAI,EAAE,OAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,mCAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,IAAI,EAAE,OAAE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,mCAAI,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;;wEAvBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY;6FAAZ,YAAY;cADxB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAgC;;;;;;;;;;;;;ACMhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAAgF;AAChF,cAAc;AACd,gFAAgF;AAEzE,MAAM,WAAW,GAAG,uBAAuB,CAAC;AAE5C,MAAM,UAAU;IAGrB,YAAmB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAFzB,SAAI,GAAG,WAAW,CAAC;IAES,CAAC;CACvC;AAED,gFAAgF;AAChF,aAAa;AACb,gFAAgF;AAEzE,MAAM,UAAU,GAAG,sBAAsB,CAAC;AAE1C,MAAM,SAAS;IAGpB,YAAmB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;QAF3B,SAAI,GAAG,UAAU,CAAC;IAEY,CAAC;CACzC;AAED,gFAAgF;AAChF,UAAU;AACV,gFAAgF;AAEzE,MAAM,OAAO,GAAG,mBAAmB,CAAC;AAEpC,MAAM,MAAM;IAGjB,YAAmB,GAAc;QAAd,QAAG,GAAH,GAAG,CAAW;QAFxB,SAAI,GAAG,OAAO,CAAC;IAEY,CAAC;CACtC;AAED,gFAAgF;AAChF,gBAAgB;AAChB,gFAAgF;AAEzE,MAAM,aAAa,GAAG,yBAAyB,CAAC;AAEhD,MAAM,YAAY;IAGvB,YAAmB,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;QAF1B,SAAI,GAAG,aAAa,CAAC;IAEQ,CAAC;CACxC;AAED,gFAAgF;AAChF,aAAa;AACb,gFAAgF;AAEzE,MAAM,UAAU,GAAG,sBAAsB,CAAC;AAE1C,MAAM,SAAS;IAGpB,YAAmB,QAAgB;QAAhB,aAAQ,GAAR,QAAQ,CAAQ;QAF1B,SAAI,GAAG,UAAU,CAAC;IAEW,CAAC;CACxC;;;;;;;;;;;;;AC9DD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIJ;AAE3C,MAAM,mBAAmB,GAAiB;IACxC,IAAI,EAAE,8DAAc,EAAE;CACvB,CAAC;AAEK,SAAS,cAAc,CAAC,QAAsB,mBAAmB,EAAE,MAA0B;IAElG,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,gFAAgF;QAChF,cAAc;QACd,gFAAgF;QAEhF,KAAK,uDAA0B,CAAC,CAAC;YAC/B,uCACK,KAAK,KACR,IAAI,kCACC,KAAK,CAAC,IAAI,GACV,MAAM,CAAC,IAAI,KAEhB;SACH;QAED,gFAAgF;QAChF,aAAa;QACb,gFAAgF;QAEhF,KAAK,sDAAyB,CAAC,CAAC;YAC9B,uCACK,KAAK,KACR,IAAI,kCACC,KAAK,CAAC,IAAI,KACb,OAAO,EAAE;wBACP,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO;wBACrB,MAAM,CAAC,MAAM;qBACd,OAEH;SACH;QAED,gFAAgF;QAChF,UAAU;QACV,gFAAgF;QAEhF,KAAK,mDAAsB,CAAC,CAAC;YAC3B,uCACK,KAAK,KACR,IAAI,kCACC,KAAK,CAAC,IAAI,KACb,IAAI,EAAE;wBACJ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI;wBAClB,MAAM,CAAC,GAAG;qBACX,OAEH;SACH;QAED,gFAAgF;QAChF,gBAAgB;QAChB,gFAAgF;QAEhF,KAAK,yDAA4B,CAAC,CAAC;YACjC,uCACK,KAAK,KACR,IAAI,kCACC,KAAK,CAAC,IAAI,KACb,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,OAAO;yBACxB,MAAM,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,KAAK,CAAC,OAEzD;SACH;QAED,gFAAgF;QAChF,aAAa;QACb,gFAAgF;QAEhF,KAAK,sDAAyB,CAAC,CAAC;YAC9B,uCACK,KAAK,KACR,IAAI,kCACC,KAAK,CAAC,IAAI,KACb,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI;yBAClB,MAAM,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,QAAQ,KAAK,KAAK,CAAC,OAEtD;SACH;QAED,OAAO,CAAC,CAAC;YACP,OAAO,KAAK,CAAC;SACd;KACF;AAEH,CAAC;AAEM,MAAM,WAAW,GAA+B;IACrD,GAAG,EAAE,cAAc;CACpB,CAAC;;;;;;;;;;;;;ACtGF;AAAA;AAAA;AAAA;AAAA,OAAO;AACsC;AAGtC,MAAM,aAAa,GAAG,CAAC,KAAe,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;AAErD,MAAM,UAAU,GAAG,kEAAc,CACtC,aAAa,EACb,CAAC,KAAmB,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CACpC,CAAC;;;;;;;;;;;;;ACTF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"content\">\n      <div class=\"title\">\n        Grid Layout Builder\n      </div>\n\n      <app-grid-view>\n      </app-grid-view>\n    </div>\n\n    <app-sidebar>\n    </app-sidebar>\n  `,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","// Angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n// Modules\nimport { AppRoutingModule } from './app-routing.module';\n\n// ngrx\nimport { StoreModule } from '@ngrx/store';\nimport { appReducers } from './store/app.reducer';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\n// Services\nimport { FormsService } from './services';\n\n// Components\nimport { AppComponent } from './app.component';\nimport {\n  AxisFormComponent,\n  GridFormComponent,\n  GridViewComponent,\n  SidebarComponent\n} from './components';\n\n// NG-Carbon\nimport { ButtonModule as CarbonButtonModule } from '@sage/ng-carbon/button';\nimport { DropdownModule as CarbonDropdownModule } from '@sage/ng-carbon/dropdown';\nimport { InputTextModule as CarbonInputTextModule } from '@sage/ng-carbon/input-text';\nimport { CheckboxModule as CarbonCheckboxModule } from '@sage/ng-carbon/checkbox';\nimport { IconModule as CarbonIconModule } from '@sage/ng-carbon/icon';\nimport { TabsModule as CarbonTabsModule } from '@sage/ng-carbon/tabs';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot(appReducers),\n    StoreDevtoolsModule.instrument({maxAge: 20}),\n    CarbonButtonModule,\n    CarbonDropdownModule,\n    CarbonInputTextModule,\n    CarbonCheckboxModule,\n    CarbonIconModule,\n    CarbonTabsModule\n  ],\n  declarations: [\n    AppComponent,\n    AxisFormComponent,\n    GridFormComponent,\n    GridViewComponent,\n    SidebarComponent\n  ],\n  providers: [\n    FormsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Angular\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-axis-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"axisForm\"\r\n      [formGroup]=\"axisForm\"\r\n      (ngSubmit)=\"addAxis()\"\r\n    >\r\n      <div class=\"input-field\">\r\n        <sds-input-text\r\n          formControlName=\"size\"\r\n          placeholderText=\"size..\"\r\n          errorType=\"error\"\r\n          [errors]=\"isFieldInvalid(axisForm, 'size')\"\r\n        >\r\n        </sds-input-text>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <sds-dropdown\r\n          formControlName=\"unit\"\r\n          placeholder=\"unit..\"\r\n          errorType=\"error\"\r\n          [errors]=\"isFieldInvalid(axisForm, 'unit')\"\r\n        >\r\n          <sds-dropdown-option\r\n            *ngFor=\"let option of axisUnits\"\r\n            [value]=\"option\"\r\n          >\r\n            {{ option }}\r\n          </sds-dropdown-option>\r\n        </sds-dropdown>\r\n      </div>\r\n\r\n      <sds-button type=\"submit\">Add</sds-button>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./axis-form.component.scss']\r\n})\r\nexport class AxisFormComponent {\r\n  @Input()\r\n  axisForm: FormGroup;\r\n\r\n  @Output()\r\n  axisAdded: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  axisUnits = [\r\n    'fr',\r\n    '%',\r\n    'px',\r\n    'auto'\r\n  ];\r\n\r\n  addAxis() {\r\n    this.axisForm.markAllAsTouched();\r\n\r\n    if (!this.axisForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.axisAdded.emit();\r\n  }\r\n\r\n  isFieldInvalid(form: FormGroup, field: string): string {\r\n    return form.get(field).touched && form.get(field).errors\r\n      ? 'This field is required.'\r\n      : null;\r\n  }\r\n}\r\n","// Angular\r\nimport { Component, Input } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-grid-form',\r\n  template: `\r\n    <form\r\n      *ngIf=\"gridForm\"\r\n      [formGroup]=\"gridForm\"\r\n    >\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Column Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"columnGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <label>\r\n          Row Gap (px):\r\n          <input type=\"number\" min=\"0\" formControlName=\"rowGap\"/>\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"input-field\">\r\n        <sds-checkbox\r\n          formControlName=\"fillGrid\"\r\n          size=\"large\"\r\n        >\r\n          Fill grid?\r\n        </sds-checkbox>\r\n      </div>\r\n    </form>\r\n  `,\r\n  styleUrls: ['./grid-form.component.scss']\r\n})\r\nexport class GridFormComponent {\r\n  @Input()\r\n  gridForm: FormGroup;\r\n}\r\n","// Angular\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\n// ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport * as BuilderSelectors from '../../store/app.selector';\r\nimport { DeleteColumn, DeleteRow } from 'src/app/store/app.action';\r\n\r\n// libs\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n// Models\r\nimport { GridModel } from '../../models';\r\n\r\n@Component({\r\n  selector: 'app-grid-view',\r\n  template: `\r\n    <div class=\"grid-view\">\r\n      <div\r\n        *ngIf=\"grid.columns.length > 0\"\r\n        class=\"columns\"\r\n        [style]=\"columnStyles\"\r\n      >\r\n        <div\r\n          *ngFor=\"let col of columnCount; let i = index\"\r\n          tabIndex=\"0\"\r\n          (click)=\"removeColumn(i)\"\r\n        >\r\n          DELETE\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"grid.rows.length > 0\"\r\n        class=\"rows\"\r\n        [style]=\"rowStyles\"\r\n      >\r\n        <div\r\n          *ngFor=\"let row of rowCount; let i = index\"\r\n          tabIndex=\"0\"\r\n          (click)=\"removeRow(i)\"\r\n        >\r\n          DELETE\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        id=\"grid\"\r\n        class=\"grid\"\r\n        [style]=\"styles\"\r\n      >\r\n        <ng-container *ngIf=\"grid?.fillGrid\">\r\n          <div\r\n            *ngFor=\"let item of count\"\r\n            class=\"grid__item\"\r\n          >\r\n            ITEM\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./grid-view.component.scss']\r\n})\r\nexport class GridViewComponent implements OnInit, OnDestroy {\r\n  grid: GridModel;\r\n\r\n  unsubscribe$: Subject<void> = new Subject<void>();\r\n\r\n  constructor(private store: Store<AppState>) {}\r\n\r\n  ngOnInit() {\r\n    this.store.select(BuilderSelectors.selectGrid)\r\n      .pipe(takeUntil(this.unsubscribe$))\r\n      .subscribe(grid => {\r\n        this.grid = grid;\r\n      });\r\n  }\r\n\r\n  removeColumn(index: number) {\r\n    this.store.dispatch(new DeleteColumn(index));\r\n  }\r\n\r\n  removeRow(index: number) {\r\n    this.store.dispatch(new DeleteRow(index));\r\n  }\r\n\r\n  get columnCount() {\r\n    return new Array(this.grid.columns.length);\r\n  }\r\n\r\n  get rowCount() {\r\n    return new Array(this.grid.rows.length);\r\n  }\r\n\r\n  get count() {\r\n    return new Array(this.grid.columns.length * Math.max(1, this.grid.rows.length));\r\n  }\r\n\r\n  get columnStyles() {\r\n    return {\r\n      gridTemplateColumns: this.grid.columns.map(column => `${column.size}${column.unit}`).join(' '),\r\n      gridColumnGap: this.grid.columnGap + 'px'\r\n    };\r\n  }\r\n\r\n  get rowStyles() {\r\n    return {\r\n      gridTemplateRows: this.grid.rows.map(row => `${row.size}${row.unit}`).join(' '),\r\n      gridRowGap: this.grid.rowGap + 'px'\r\n    };\r\n  }\r\n\r\n  get styles() {\r\n    return {\r\n      display: 'grid',\r\n      ...this.columnStyles,\r\n      ...this.rowStyles\r\n    };\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe$.next();\r\n    this.unsubscribe$.complete();\r\n  }\r\n}\r\n","export * from './axis-form/axis-form.component';\r\nexport * from './grid-form/grid-form.component';\r\nexport * from './grid-view/grid-view.component';\r\nexport * from './sidebar/sidebar.component';\r\n","// Angular\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\n// Services\r\nimport { FormsService } from 'src/app/services';\r\n\r\n// ngrx\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'src/app/store/app.state';\r\nimport * as BuilderSelectors from '../../store/app.selector';\r\nimport { UpdateGrid, AddColumn, AddRow } from 'src/app/store/app.action';\r\n\r\n// rxjs\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  template: `\r\n    <div class=\"sidebar\">\r\n      <!-- <div\r\n        class=\"sidebar__toggle\"\r\n        (click)=\"toggleSidebar()\"\r\n      >\r\n        <sds-icon\r\n          type=\"dark-background\"\r\n          [iconType]=\"open ? 'arrow_left' : 'arrow_right'\"\r\n        >\r\n        </sds-icon>\r\n      </div> -->\r\n\r\n      <div class=\"heading\">Configuration</div>\r\n\r\n      <app-grid-form [gridForm]=\"gridForm\">\r\n      </app-grid-form>\r\n\r\n      <hr/>\r\n\r\n      <sds-tabs>\r\n        <sds-tab>\r\n          <sds-tab-header (tabSelected)=\"columnForm.reset()\">\r\n            Add Column\r\n          </sds-tab-header>\r\n          <sds-tab-content>\r\n            <app-axis-form\r\n              [axisForm]=\"columnForm\"\r\n              (axisAdded)=\"addColumn()\"\r\n            >\r\n            </app-axis-form>\r\n          </sds-tab-content>\r\n        </sds-tab>\r\n\r\n        <sds-tab>\r\n          <sds-tab-header (tabSelected)=\"rowForm.reset()\">\r\n            Add Row\r\n          </sds-tab-header>\r\n          <sds-tab-content>\r\n            <app-axis-form\r\n              [axisForm]=\"rowForm\"\r\n              (axisAdded)=\"addRow()\"\r\n            >\r\n            </app-axis-form>\r\n          </sds-tab-content>\r\n        </sds-tab>\r\n      </sds-tabs>\r\n\r\n      <hr/>\r\n\r\n      <sds-button (clickEvent)=\"getStyles()\">\r\n        Get Styles\r\n      </sds-button>\r\n\r\n      <pre\r\n        *ngIf=\"generatedStyles\"\r\n        class=\"output-styles\"\r\n      >\r\n#grid &#123;\r\n    {{ generatedStyles }}\r\n&#125;\r\n</pre>\r\n\r\n    </div>\r\n  `,\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  gridForm: FormGroup;\r\n  columnForm: FormGroup;\r\n  rowForm: FormGroup;\r\n\r\n  generatedStyles: string;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private formsService: FormsService) {}\r\n\r\n  ngOnInit() {\r\n    this.store.select(BuilderSelectors.selectGrid)\r\n      .pipe(take(1))\r\n      .subscribe(grid => {\r\n        this.gridForm = this.formsService.createGridForm(grid);\r\n\r\n        this.gridForm.valueChanges.subscribe(updatedGrid => {\r\n          this.store.dispatch(new UpdateGrid(updatedGrid));\r\n        });\r\n      });\r\n\r\n    this.columnForm = this.formsService.createAxisForm();\r\n    this.rowForm = this.formsService.createAxisForm();\r\n  }\r\n\r\n  addColumn() {\r\n    this.store.dispatch(\r\n      new AddColumn(this.columnForm.value)\r\n    );\r\n    this.columnForm.reset();\r\n  }\r\n\r\n  addRow() {\r\n    this.store.dispatch(\r\n      new AddRow(this.rowForm.value)\r\n    );\r\n    this.rowForm.reset();\r\n  }\r\n\r\n  getStyles() {\r\n    const styles = document.getElementById('grid').style.cssText;\r\n\r\n    this.generatedStyles = styles.replace(/; /g, ';\\n    ');\r\n  }\r\n}\r\n","import { AxisModel } from './axis.model';\r\n\r\nexport interface GridModel {\r\n  columns: AxisModel[];\r\n  rows: AxisModel[];\r\n  columnGap: number;\r\n  rowGap: number;\r\n  fillGrid: boolean;\r\n}\r\n\r\nexport const getInitialGrid = (): GridModel => {\r\n  return {\r\n    columns: [{ size: '1', unit: 'fr' }, { size: '1', unit: 'fr' }],\r\n    rows: [{ size: '1', unit: 'fr' }, { size: '1', unit: 'fr' }],\r\n    columnGap: 10,\r\n    rowGap: 10,\r\n    fillGrid: true\r\n  };\r\n};\r\n","export * from './axis.model';\r\nexport * from './grid.model';\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\n@Injectable()\r\nexport class FormsService {\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  createGridForm(grid: GridModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      columnGap: grid.columnGap,\r\n      rowGap: grid.rowGap,\r\n      fillGrid: grid.fillGrid,\r\n      // columns: this.formBuilder.array([\r\n      //   ...grid.columns.map(column => this.createAxisForm(column))\r\n      // ]),\r\n      // rows: this.formBuilder.array([\r\n      //   ...grid.rows.map(row => this.createAxisForm(row))\r\n      // ])\r\n    });\r\n  }\r\n\r\n  createAxisForm(axis?: AxisModel): FormGroup {\r\n    return this.formBuilder.group({\r\n      size: [ axis?.size ?? '', Validators.required],\r\n      unit: [ axis?.unit ?? null, Validators.required]\r\n    });\r\n  }\r\n\r\n}\r\n","export * from './forms.service';\r\n","// ngrx\r\nimport { Action } from '@ngrx/store';\r\n\r\n// Models\r\nimport { GridModel, AxisModel } from '../models';\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Update Grid\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const UPDATE_GRID = '[Builder] UPDATE_GRID';\r\n\r\nexport class UpdateGrid implements Action {\r\n  readonly type = UPDATE_GRID;\r\n\r\n  constructor(public grid: GridModel) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Add Column\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const ADD_COLUMN = '[Builder] ADD_COLUMN';\r\n\r\nexport class AddColumn implements Action {\r\n  readonly type = ADD_COLUMN;\r\n\r\n  constructor(public column: AxisModel) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Add Row\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const ADD_ROW = '[Builder] ADD_ROW';\r\n\r\nexport class AddRow implements Action {\r\n  readonly type = ADD_ROW;\r\n\r\n  constructor(public row: AxisModel) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Delete Column\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const DELETE_COLUMN = '[Builder] DELETE_COLUMN';\r\n\r\nexport class DeleteColumn implements Action {\r\n  readonly type = DELETE_COLUMN;\r\n\r\n  constructor(public position: number) {}\r\n}\r\n\r\n////////////////////////////////////////////////////////////////////////////////\r\n// Delete Row\r\n////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport const DELETE_ROW = '[Builder] DELETE_ROW';\r\n\r\nexport class DeleteRow implements Action {\r\n  readonly type = DELETE_ROW;\r\n\r\n  constructor(public position: number) {}\r\n}\r\n\r\nexport type All =\r\n  UpdateGrid\r\n  | AddColumn\r\n  | AddRow\r\n  | DeleteColumn\r\n  | DeleteRow;\r\n","// ngrx\r\nimport { ActionReducerMap } from '@ngrx/store';\r\nimport * as BuilderActions from './app.action';\r\n\r\n// Models\r\nimport { AppState, BuilderState } from './app.state';\r\nimport { getInitialGrid } from '../models';\r\n\r\nconst defaultBuilderState: BuilderState = {\r\n  grid: getInitialGrid()\r\n};\r\n\r\nexport function builderReducer(state: BuilderState = defaultBuilderState, action: BuilderActions.All): BuilderState {\r\n\r\n  switch (action.type) {\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Update Grid\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.UPDATE_GRID: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          ...action.grid\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Add Column\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.ADD_COLUMN: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          columns: [\r\n            ...state.grid.columns,\r\n            action.column\r\n          ]\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Add Row\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.ADD_ROW: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          rows: [\r\n            ...state.grid.rows,\r\n            action.row\r\n          ]\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Delete Column\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.DELETE_COLUMN: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          columns: state.grid.columns\r\n            .filter((column, index) => action.position !== index)\r\n        }\r\n      };\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    // Delete Row\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n\r\n    case BuilderActions.DELETE_ROW: {\r\n      return {\r\n        ...state,\r\n        grid: {\r\n          ...state.grid,\r\n          rows: state.grid.rows\r\n            .filter((row, index) => action.position !== index)\r\n        }\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const appReducers: ActionReducerMap<AppState> = {\r\n  app: builderReducer\r\n};\r\n","// ngrx\r\nimport { createSelector } from '@ngrx/store';\r\nimport { AppState, BuilderState } from './app.state';\r\n\r\nexport const selectBuilder = (state: AppState) => state.app;\r\n\r\nexport const selectGrid = createSelector(\r\n  selectBuilder,\r\n  (state: BuilderState) => state.grid\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}